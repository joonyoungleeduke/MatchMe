{"ast":null,"code":"var _jsxFileName = \"/Users/joonyounglee/MITHACK/MITHack2020/client/src/Pages/Home.js\";\nimport React, { useState, useEffect, useReducer } from 'react';\nimport FeedCard from \"../Components/FeedCard\";\nimport NavBar from \"../Components/NavBar\";\nimport { Card, Icon, Grid, Segment, Button, Container } from 'semantic-ui-react';\nimport GroupsCard from \"../Components/GroupsCard\";\nimport ProfileCard from \"../Components/ProfileCard\";\nimport NewPost from \"../Components/NewPost\";\nimport SuggestedGroups from '../Components/SuggestedGroups';\nimport { Nav } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport GroupPosts from \"../APIComponents/GroupPosts\";\nimport UserGroups from \"../APIComponents/UserGroups\";\nimport UserInfo from \"../APIComponents/UserInfo\";\nimport ProfileInfo from \"../APIComponents/ProfileInfo\";\nimport GroupSuggestions from \"../APIComponents/GroupSuggestions\";\nimport InterestPosts from \"../APIComponents/InterestPosts\";\nimport SpecificPosts from \"../APIComponents/SpecificPosts\";\nimport Posts from \"../Components/Posts\";\nimport ParseAllPosts from \"../APIComponents/ParseAllPosts\";\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nfunction postReducer(state, action) {\n  switch (action.type) {\n    case 'OPEN_MODAL':\n      return {\n        showpost: true,\n        dimmer: action.dimmer\n      };\n\n    case 'CLOSE_MODAL':\n      return {\n        showpost: false\n      };\n\n    default:\n      throw new Error();\n  }\n}\n\nconst Home = props => {\n  function updatePosts() {\n    getPosts(user_id, limit);\n  }\n\n  const [explore, setExplore] = useState(true);\n  const [posts, setPosts] = useState([]);\n  const [explorePosts, setExplorePosts] = useState([]);\n  const [state, handlePost] = React.useReducer(postReducer, {\n    showpost: false,\n    dimmer: undefined\n  });\n\n  function handlePostChange(state) {\n    handlePost(state);\n  }\n\n  const [match_state, handleMatchPost] = React.useReducer(postReducer, {\n    showpost: false,\n    dimmer: undefined\n  });\n\n  function handleMatchPostChange(state) {\n    handleMatchPost(state);\n  }\n\n  const [user, setUser] = useState({});\n  const [profile, setProfile] = useState({});\n  const [groups, setGroups] = useState([]);\n  const [suggestions, setSuggestions] = useState([]); // group suggestions \n\n  const user_id = localStorage.getItem('user_id');\n  const limit = 10; // limit on # posts \n\n  useEffect(() => {\n    getPosts(user_id, limit);\n    getExplorePosts(user_id, limit);\n    getGroups(user_id);\n    getUser(user_id);\n    getProfile(user_id);\n    getSuggestions(user_id);\n  }, {});\n\n  async function getSuggestions(user_id) {\n    let suggestions = GroupSuggestions(user_id);\n    suggestions.then(data => {\n      setSuggestions(data);\n    });\n  }\n\n  const handleToggle = event => {\n    setExplore(!explore);\n  }; // async function getPosts(user_id) {\n  //   await getGroups(user_id);\n  //   let arr = Array(); \n  //   for (let idx in groups) {\n  //     let group = groups[idx];\n  //     let data = await GroupPosts(group.id);\n  //     data.then(info => {\n  //       arr.push(info);\n  //     })\n  //   }\n  //   setPosts(arr);\n  // }\n\n\n  async function getPosts(user_id, limit) {\n    let posts = await SpecificPosts(user_id, limit);\n    await ParseAllPosts(posts, setPosts, user_id);\n  }\n\n  async function getExplorePosts(user_id, limit) {\n    let posts = await InterestPosts(user_id, limit);\n    await ParseAllPosts(posts, setExplorePosts, user_id);\n  }\n\n  async function getGroups(user_id) {\n    let groups = UserGroups(user_id);\n    groups.then(data => {\n      setGroups(data);\n    });\n  }\n\n  async function getUser(user_id) {\n    let user = UserInfo(user_id);\n    user.then(data => {\n      setUser(data);\n    });\n  }\n\n  ;\n\n  async function getProfile(user_id) {\n    let profile = ProfileInfo(user_id);\n    profile.then(data => {\n      setProfile(data);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LinkContainer, {\n    to: \"/profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ProfileCard, {\n    className: \"profCard\",\n    name: user.first_name + \" \" + user.last_name,\n    src: profile.image,\n    inspired: profile.total_matches,\n    matched: profile.ind_matches,\n    groups: groups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(GroupsCard, {\n    header: \"Your Groups\",\n    name: props.name,\n    src: props.src,\n    inspired: props.inspired,\n    matched: props.matched,\n    groups: groups,\n    img: profile.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Column, {\n    centered: true,\n    width: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(NewPost, {\n    name: user.first_name + \" \" + user.last_name,\n    profile: profile,\n    match_state: match_state,\n    state: state,\n    handlePostChange: handlePostChange,\n    handleMatchPostChange: handleMatchPostChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Posts, {\n    posts: explore ? posts : explorePosts,\n    curr_user: user.id,\n    updatePosts: updatePosts,\n    img: profile.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(SuggestedGroups, {\n    groups: suggestions,\n    img: profile.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  })))));\n};\n\nexport default Home;\nconst styles = {\n  filter: {\n    margin: \"10px\",\n    height: \"auto\",\n    top: \"auto\",\n    left: 'auto',\n    bottom: 'auto',\n    right: 'auto'\n  }\n}; // .modal {\n//   height: auto;\n//   top: auto;\n//   left: auto; \n//   bottom: auto; \n//   right: auto;\n// }","map":{"version":3,"sources":["/Users/joonyounglee/MITHACK/MITHack2020/client/src/Pages/Home.js"],"names":["React","useState","useEffect","useReducer","FeedCard","NavBar","Card","Icon","Grid","Segment","Button","Container","GroupsCard","ProfileCard","NewPost","SuggestedGroups","Nav","LinkContainer","GroupPosts","UserGroups","UserInfo","ProfileInfo","GroupSuggestions","InterestPosts","SpecificPosts","Posts","ParseAllPosts","Switch","FormControlLabel","postReducer","state","action","type","showpost","dimmer","Error","Home","props","updatePosts","getPosts","user_id","limit","explore","setExplore","posts","setPosts","explorePosts","setExplorePosts","handlePost","undefined","handlePostChange","match_state","handleMatchPost","handleMatchPostChange","user","setUser","profile","setProfile","groups","setGroups","suggestions","setSuggestions","localStorage","getItem","getExplorePosts","getGroups","getUser","getProfile","getSuggestions","then","data","handleToggle","event","first_name","last_name","image","total_matches","ind_matches","name","src","inspired","matched","id","styles","filter","margin","height","top","left","bottom","right"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useReducer} from 'react'\nimport FeedCard from \"../Components/FeedCard\";\nimport NavBar from \"../Components/NavBar\";\nimport { Card, Icon, Grid, Segment, Button, Container} from 'semantic-ui-react'\nimport GroupsCard from \"../Components/GroupsCard\";\nimport ProfileCard from \"../Components/ProfileCard\"\nimport NewPost from \"../Components/NewPost\";\nimport SuggestedGroups from '../Components/SuggestedGroups';\nimport {Nav} from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport GroupPosts from \"../APIComponents/GroupPosts\";\nimport UserGroups from \"../APIComponents/UserGroups\";\nimport UserInfo from \"../APIComponents/UserInfo\";\nimport ProfileInfo from \"../APIComponents/ProfileInfo\";\nimport GroupSuggestions from \"../APIComponents/GroupSuggestions\";\nimport InterestPosts from \"../APIComponents/InterestPosts\";\nimport SpecificPosts from \"../APIComponents/SpecificPosts\";\nimport Posts from \"../Components/Posts\";\nimport ParseAllPosts from \"../APIComponents/ParseAllPosts\";\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nfunction postReducer(state, action) {\n  switch (action.type) {\n    case 'OPEN_MODAL' :\n      return { showpost: true, dimmer: action.dimmer }\n    case 'CLOSE_MODAL' : \n      return { showpost: false }\n    default: \n      throw new Error(); \n  }\n}\n\n\nconst Home = (props) => {\n\n  function updatePosts() {\n      getPosts(user_id, limit);\n  }\n\n  const [explore, setExplore] = useState(true);\n  const [posts, setPosts] = useState([]);\n  const [explorePosts, setExplorePosts] = useState([]);\n\n  const [state, handlePost] = React.useReducer(postReducer, {\n    showpost: false, \n    dimmer: undefined,\n  })\n\n  function handlePostChange(state) {\n    handlePost(state);\n  }\n\n  const [match_state, handleMatchPost] = React.useReducer(postReducer, {\n    showpost: false, \n    dimmer: undefined, \n  })\n\n  function handleMatchPostChange(state) {\n    handleMatchPost(state);\n  }\n\n\n  const [user, setUser] = useState({});\n  const [profile, setProfile] = useState({});\n  const [groups, setGroups] = useState([]);\n  const [suggestions, setSuggestions] = useState([]); // group suggestions \n\n  const user_id = localStorage.getItem('user_id');\n\n  const limit = 10; // limit on # posts \n\n  useEffect(() => {\n      getPosts(user_id, limit);\n      getExplorePosts(user_id, limit);\n      getGroups(user_id);\n      getUser(user_id);\n      getProfile(user_id);\n      getSuggestions(user_id);\n  }, {});\n\n  async function getSuggestions(user_id) {\n    let suggestions = GroupSuggestions(user_id);\n    suggestions.then(data => {\n      setSuggestions(data);\n    })\n\n  }\n\n  const handleToggle = (event) => {\n    setExplore(!explore);\n  }\n\n  // async function getPosts(user_id) {\n  //   await getGroups(user_id);\n\n  //   let arr = Array(); \n\n  //   for (let idx in groups) {\n  //     let group = groups[idx];\n\n  //     let data = await GroupPosts(group.id);\n  //     data.then(info => {\n  //       arr.push(info);\n  //     })\n  //   }\n\n  //   setPosts(arr);\n  // }\n\n  async function getPosts(user_id, limit) {\n    let posts = await SpecificPosts(user_id, limit);\n    await ParseAllPosts(posts, setPosts, user_id); \n  }\n\n  async function getExplorePosts(user_id, limit) {\n    let posts = await InterestPosts(user_id, limit);\n    await ParseAllPosts(posts, setExplorePosts, user_id);\n    }\n  \n\n  async function getGroups(user_id) {\n    let groups = UserGroups(user_id);\n    groups.then(data => {\n      setGroups(data);\n    })\n  }\n\n  async function getUser(user_id) {\n    let user = UserInfo(user_id);\n\n    user.then(data => {\n      setUser(data);\n    })\n  };\n\n  async function getProfile(user_id) {\n    let profile = ProfileInfo(user_id);\n\n    profile.then(data => {\n      setProfile(data);\n    })\n  }\n\n    return (\n      <div>\n          <NavBar/>\n\n          <Grid centered>\n            <Grid.Row>\n                <Grid.Column width={3} >\n                  <LinkContainer to=\"/profile\">\n                  <Nav.Link >\n                      <ProfileCard className=\"profCard\" name={user.first_name + \" \" + user.last_name} src={profile.image} \n                      inspired={profile.total_matches} matched={profile.ind_matches} \n                      groups={groups} />\n                      </Nav.Link>\n                    </LinkContainer>\n\n                    <GroupsCard header=\"Your Groups\" name={props.name} src={props.src} inspired={props.inspired} matched={props.matched} groups={groups} img={profile.image}/>\n\n                </Grid.Column>\n\n\n\n                  <Grid.Column centered width={5}>\n\n                    <NewPost name = {user.first_name + \" \" + user.last_name} profile = {profile} match_state = {match_state} state={ state } handlePostChange={handlePostChange} handleMatchPostChange={handleMatchPostChange} />\n\n                  {/* <FormControlLabel \n                    control={\n                      <Switch\n                      checked = {explore}\n                      onChange = {handleToggle}\n                      name=\"toggle\"\n                      color=\"Primary\"\n                    />\n                    }\n                    label=\"See All\"\n                  /> */}\n\n\n                  \n                {/* <Container style={styles.filter}>\n                  <Button toggle active={explore} onClick = {handleToggle}>\n                      Filtering\n                    </Button>\n                </Container> */}\n\n\n                    {/* <Posts posts={explore ? posts : explorePosts} img={profile.image} /> */}\n                    <Posts posts={explore ? posts : explorePosts} curr_user={user.id} updatePosts={updatePosts} img={profile.image} />\n\n                    {/* <FeedCard description={description} likes={8}/> */}\n\n\n\n                  </Grid.Column>\n\n\n                  <Grid.Column width={3}>\n\n                    <SuggestedGroups groups={suggestions} img={profile.image}/>\n\n\n\n                  </Grid.Column>\n\n              </Grid.Row>\n\n          </Grid>\n\n      </div>\n\n    );\n}\n\nexport default Home;\n\n\nconst styles = {\n  filter: {\n    margin: \"10px\",\n    height: \"auto\",\n    top: \"auto\",\n    left: 'auto',\n    bottom: 'auto', \n    right: 'auto',\n  },\n}\n\n// .modal {\n//   height: auto;\n//   top: auto;\n//   left: auto; \n//   bottom: auto; \n//   right: auto;\n// }"]},"metadata":{},"sourceType":"module"}