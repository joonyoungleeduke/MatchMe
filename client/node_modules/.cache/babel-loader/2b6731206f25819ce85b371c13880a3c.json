{"ast":null,"code":"var _jsxFileName = \"/Users/joonyounglee/MITHACK/MITHack2020/client/src/Components/Posts.js\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport { render } from \"react-dom\";\nimport axiosInstance from \"../User/axiosApi\";\nimport ParsePosts from \"../APIComponents/ParsePosts\";\nimport { Button } from 'semantic-ui-react';\nimport FeedCard from \"./FeedCard\";\nimport { BiBorderNone } from \"react-icons/bi\";\n\nfunction Posts() {\n  const [posts, setPosts] = useState([]);\n  const [matches, setMatches] = useState([]);\n  useEffect(() => {\n    postFetch({\n      limit: 10\n    });\n  }, []);\n\n  async function setterPosts(data) {\n    data = await ParsePosts(data);\n    let posts = data.filter(post => post.isMatch === false);\n    let matches = data.filter(post => post.isMatch === true);\n    setPosts(posts);\n    setMatches(matches);\n  }\n\n  async function postFetch(pagination) {\n    try {\n      var limit = pagination.limit;\n      var id = localStorage.getItem(\"user_id\");\n      const response = await axiosInstance.get('api/posts/interests/' + id.toString() + \"/\" + limit.toString() + \"/\");\n      const data = response.data;\n      await setterPosts(data);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, matches.map(match =>\n  /*#__PURE__*/\n  // group.name, group.description, group.image, group.theme\n  React.createElement(FeedCard, {\n    isMatch: true,\n    post: match,\n    className: this.props.showMatches ? '' : 'hidden',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  })), posts.map(post => {\n    /*#__PURE__*/\n    React.createElement(FeedCard, {\n      isMatch: false,\n      post: post,\n      className: this.props.showPosts ? '' : 'hidden',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    });\n  }));\n}\n\nexport default Posts;","map":{"version":3,"sources":["/Users/joonyounglee/MITHACK/MITHack2020/client/src/Components/Posts.js"],"names":["React","Component","useState","useEffect","render","axiosInstance","ParsePosts","Button","FeedCard","BiBorderNone","Posts","posts","setPosts","matches","setMatches","postFetch","limit","setterPosts","data","filter","post","isMatch","pagination","id","localStorage","getItem","response","get","toString","error","console","log","map","match","props","showMatches","showPosts"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAEA,SAASC,KAAT,GAAiB;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,SAAS,CAAC;AAAEC,MAAAA,KAAK,EAAC;AAAR,KAAD,CAAT;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeC,WAAf,CAA2BC,IAA3B,EAAiC;AAC7BA,IAAAA,IAAI,GAAG,MAAMZ,UAAU,CAACY,IAAD,CAAvB;AAEA,QAAIP,KAAK,GAAGO,IAAI,CAACC,MAAL,CAAYC,IAAI,IAAIA,IAAI,CAACC,OAAL,KAAiB,KAArC,CAAZ;AACA,QAAIR,OAAO,GAAGK,IAAI,CAACC,MAAL,CAAYC,IAAI,IAAIA,IAAI,CAACC,OAAL,KAAiB,IAArC,CAAd;AAEAT,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAG,IAAAA,UAAU,CAACD,OAAD,CAAV;AACH;;AAED,iBAAeE,SAAf,CAAyBO,UAAzB,EAAqC;AACjC,QAAI;AACA,UAAIN,KAAK,GAAGM,UAAU,CAACN,KAAvB;AACA,UAAIO,EAAE,GAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAT;AACA,YAAMC,QAAQ,GAAG,MAAMrB,aAAa,CAACsB,GAAd,CAAkB,yBAAyBJ,EAAE,CAACK,QAAH,EAAzB,GAAyC,GAAzC,GAA+CZ,KAAK,CAACY,QAAN,EAA/C,GAAkE,GAApF,CAAvB;AAEA,YAAMV,IAAI,GAAGQ,QAAQ,CAACR,IAAtB;AAEA,YAAMD,WAAW,CAACC,IAAD,CAAjB;AAEA,aAAOQ,QAAQ,CAACR,IAAhB;AACH,KAVD,CAUE,OAAOW,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;;AAAA;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKhB,OAAO,CAACmB,GAAR,CAAYC,KAAK;AAAA;AAAM;AAEpB,sBAAC,QAAD;AAAU,IAAA,OAAO,EAAE,IAAnB;AAAyB,IAAA,IAAI,EAAEA,KAA/B;AAAsC,IAAA,SAAS,EAAE,KAAKC,KAAL,CAAWC,WAAX,GAAyB,EAAzB,GAA8B,QAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,CAFL,EASKxB,KAAK,CAACqB,GAAN,CAAUZ,IAAI,IAAI;AAEf;AAAA,wBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,KAAnB;AAA0B,MAAA,IAAI,EAAEA,IAAhC;AAAsC,MAAA,SAAS,EAAE,KAAKc,KAAL,CAAWE,SAAX,GAAuB,EAAvB,GAA4B,QAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEH,GAJA,CATL,CADJ;AAoBH;;AAED,eAAe1B,KAAf","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { render } from \"react-dom\";\nimport axiosInstance from \"../User/axiosApi\";\nimport ParsePosts from \"../APIComponents/ParsePosts\";\nimport { Button } from 'semantic-ui-react'; \nimport FeedCard from \"./FeedCard\";\nimport { BiBorderNone } from \"react-icons/bi\";\n\nfunction Posts() {\n    const [posts, setPosts] = useState([]);\n    const [matches, setMatches] = useState([]); \n\n    useEffect(() => {\n        postFetch({ limit:10 });\n    }, []);    \n\n    async function setterPosts(data) {\n        data = await ParsePosts(data);\n\n        let posts = data.filter(post => post.isMatch === false);\n        let matches = data.filter(post => post.isMatch === true);\n\n        setPosts(posts);\n        setMatches(matches);\n    }\n\n    async function postFetch(pagination) {\n        try {\n            var limit = pagination.limit; \n            var id = localStorage.getItem(\"user_id\");\n            const response = await axiosInstance.get('api/posts/interests/' + id.toString() + \"/\" + limit.toString() + \"/\");\n            \n            const data = response.data;\n\n            await setterPosts(data);\n\n            return response.data; \n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    return (\n        <div>\n\n            {matches.map(match => ( // group.name, group.description, group.image, group.theme\n                \n                <FeedCard isMatch={true} post={match} className={this.props.showMatches ? '' : 'hidden'}/>\n\n            ))\n            }\n\n            {posts.map(post => {\n\n                <FeedCard isMatch={false} post={post} className={this.props.showPosts ? '' : 'hidden'} />\n\n            })}\n\n            {/* </InfiniteScroll> */}\n        </div>\n    );\n\n}\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}