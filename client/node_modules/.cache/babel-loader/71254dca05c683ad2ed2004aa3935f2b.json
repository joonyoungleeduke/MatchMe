{"ast":null,"code":"var _jsxFileName = \"/Users/joonyounglee/MITHACK/MITHack2020/client/src/Components/NewPost.js\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport axiosInstance from \"../User/axiosApi\";\nimport { Card, Form } from 'semantic-ui-react';\nimport { useHistory } from \"react-router-dom\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { AiFillPicture } from \"react-icons/ai\";\nimport { FiLink } from \"react-icons/fi\";\nimport { BsFillCameraVideoFill } from \"react-icons/bs\";\n\nfunction NewPost(props) {\n  let history = useHistory();\n\n  const handleClose = () => props.setShowPost(false);\n\n  const handleShow = () => props.setShowPost(true);\n\n  const [options, setOptions] = useState([]);\n  const [form, setForm] = useState({\n    group: null,\n    content: \"\"\n  });\n  useEffect(() => {\n    parseOptions();\n  }, []);\n\n  async function parseOptions() {\n    var groups = await groupsFetch();\n    var options_arr = new Array();\n\n    for (let idx in groups) {\n      // this code makes no sense! :) but it works...\n      // console.log(group);\n      options_arr.push({\n        text: groups[idx].name,\n        value: groups[idx].id\n      });\n    }\n\n    console.log(options_arr);\n    setOptions(options_arr);\n  }\n\n  ;\n\n  async function groupsFetch() {\n    try {\n      var id = localStorage.getItem(\"user_id\");\n      const response = await axiosInstance.get('api/groups/user/' + id.toString() + \"/\");\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  ;\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    try {\n      const response = await axiosInstance.post('api/posts/create/', {\n        group: form.group,\n        content: form.content\n      });\n\n      if (response.status === 200) {\n        history.push('/');\n      }\n\n      console.log(response);\n      return response;\n    } catch (error) {\n      console.log(error.stack);\n    }\n  }\n\n  ;\n\n  function handleChange(event) {\n    const obj = { ...form\n    };\n    obj.content = event.target.value;\n    setForm(obj);\n  }\n\n  const handleSelectChange = (e, {\n    value\n  }) => {\n    const obj = { ...form\n    };\n    obj.group = value;\n    setForm(obj);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    show: props.showpost,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, \"New Post\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: e => handleSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Select, {\n    fluid: true,\n    label: \"Group\",\n    name: \"group\",\n    options: options,\n    placeholder: \"Group\" // value = {form.group}\n    ,\n    onChange: handleSelectChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Form.TextArea, {\n    name: \"content\",\n    label: \"Content\",\n    placeholder: \"Talk to the World!\",\n    onChange: e => handleChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleClose,\n    type: \"submit\",\n    value: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, \"Post\"))));\n}\n\nexport default NewPost;","map":{"version":3,"sources":["/Users/joonyounglee/MITHACK/MITHack2020/client/src/Components/NewPost.js"],"names":["React","Component","useState","useEffect","axiosInstance","Card","Form","useHistory","Modal","Button","AiFillPicture","FiLink","BsFillCameraVideoFill","NewPost","props","history","handleClose","setShowPost","handleShow","options","setOptions","form","setForm","group","content","parseOptions","groups","groupsFetch","options_arr","Array","idx","push","text","name","value","id","console","log","localStorage","getItem","response","get","toString","data","error","handleSubmit","event","preventDefault","post","status","stack","handleChange","obj","target","handleSelectChange","e","showpost"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,mBAA3B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,iBAA5B;AACA,SAAQC,aAAR,QAA4B,gBAA5B;AACA,SAAQC,MAAR,QAAqB,gBAArB;AACA,SAAQC,qBAAR,QAAoC,gBAApC;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAEpB,MAAIC,OAAO,GAAGR,UAAU,EAAxB;;AAEA,QAAMS,WAAW,GAAG,MAAMF,KAAK,CAACG,WAAN,CAAkB,KAAlB,CAA1B;;AACA,QAAMC,UAAU,GAAG,MAAMJ,KAAK,CAACG,WAAN,CAAkB,IAAlB,CAAzB;;AAEA,QAAK,CAACE,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,EAAD,CAArC;AACA,QAAK,CAACmB,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC;AAC5BqB,IAAAA,KAAK,EAAE,IADqB;AAE5BC,IAAAA,OAAO,EAAE;AAFmB,GAAD,CAA/B;AAKArB,EAAAA,SAAS,CAAC,MAAM;AACZsB,IAAAA,YAAY;AACf,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeA,YAAf,GAA8B;AAE1B,QAAIC,MAAM,GAAG,MAAMC,WAAW,EAA9B;AAEA,QAAIC,WAAW,GAAG,IAAIC,KAAJ,EAAlB;;AAEA,SAAK,IAAIC,GAAT,IAAgBJ,MAAhB,EAAwB;AAAE;AACtB;AACAE,MAAAA,WAAW,CAACG,IAAZ,CAAiB;AACbC,QAAAA,IAAI,EAAEN,MAAM,CAACI,GAAD,CAAN,CAAYG,IADL;AAEbC,QAAAA,KAAK,EAAER,MAAM,CAACI,GAAD,CAAN,CAAYK;AAFN,OAAjB;AAIH;;AAEDC,IAAAA,OAAO,CAACC,GAAR,CAAYT,WAAZ;AAEAR,IAAAA,UAAU,CAACQ,WAAD,CAAV;AACH;;AAAA;;AAED,iBAAeD,WAAf,GAA6B;AACzB,QAAI;AACA,UAAIQ,EAAE,GAAGG,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAT;AACA,YAAMC,QAAQ,GAAG,MAAMpC,aAAa,CAACqC,GAAd,CAAkB,qBAAqBN,EAAE,CAACO,QAAH,EAArB,GAAqC,GAAvD,CAAvB;AAEA,aAAOF,QAAQ,CAACG,IAAhB;AAEH,KAND,CAME,OAAOC,KAAP,EAAc;AACZR,MAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACH;AACJ;;AAAA;;AAED,iBAAeC,YAAf,CAA4BC,KAA5B,EAAmC;AAC/BA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAI;AACA,YAAMP,QAAQ,GAAG,MAAMpC,aAAa,CAAC4C,IAAd,CAAmB,mBAAnB,EAAwC;AAC3DzB,QAAAA,KAAK,EAAEF,IAAI,CAACE,KAD+C;AAE3DC,QAAAA,OAAO,EAAEH,IAAI,CAACG;AAF6C,OAAxC,CAAvB;;AAIA,UAAIgB,QAAQ,CAACS,MAAT,KAAoB,GAAxB,EAA6B;AACzBlC,QAAAA,OAAO,CAACgB,IAAR,CAAa,GAAb;AACH;;AAEDK,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AAEA,aAAOA,QAAP;AACH,KAZD,CAYE,OAAOI,KAAP,EAAc;AACZR,MAAAA,OAAO,CAACC,GAAR,CAAYO,KAAK,CAACM,KAAlB;AACH;AACJ;;AAAA;;AAED,WAASC,YAAT,CAAsBL,KAAtB,EAA6B;AACzB,UAAMM,GAAG,GAAG,EAAC,GAAG/B;AAAJ,KAAZ;AACA+B,IAAAA,GAAG,CAAC5B,OAAJ,GAAcsB,KAAK,CAACO,MAAN,CAAanB,KAA3B;AACAZ,IAAAA,OAAO,CAAC8B,GAAD,CAAP;AACH;;AAED,QAAME,kBAAkB,GAAG,CAACC,CAAD,EAAI;AAAErB,IAAAA;AAAF,GAAJ,KAAkB;AACzC,UAAMkB,GAAG,GAAG,EAAC,GAAG/B;AAAJ,KAAZ;AACA+B,IAAAA,GAAG,CAAC7B,KAAJ,GAAYW,KAAZ;AACAZ,IAAAA,OAAO,CAAC8B,GAAD,CAAP;AACH,GAJD;;AAMA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEtC,KAAK,CAAC0C,QAAnB;AAA6B,IAAA,MAAM,EAAExC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAJJ,eAOI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAGuC,CAAD,IAAOV,YAAY,CAACU,CAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,MAAM,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,MAAN;AACI,IAAA,KAAK,MADT;AAEI,IAAA,KAAK,EAAC,OAFV;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,OAAO,EAAEpC,OAJb;AAKI,IAAA,WAAW,EAAC,OALhB,CAMI;AANJ;AAOI,IAAA,QAAQ,EAAImC,kBAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAYI,oBAAC,IAAD,CAAM,QAAN;AAAe,IAAA,IAAI,EAAC,SAApB;AAA8B,IAAA,KAAK,EAAC,SAApC;AAA8C,IAAA,WAAW,EAAC,oBAA1D;AAA+E,IAAA,QAAQ,EAAKC,CAAD,IAAOJ,YAAY,CAACI,CAAD,CAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,eAaI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAEvC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAbJ,eAcI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAEA,WAAnC;AAAgD,IAAA,IAAI,EAAC,QAArD;AAA8D,IAAA,KAAK,EAAC,QAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ,CADJ,CAPJ,CADJ;AA4BH;;AAED,eAAeH,OAAf","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport axiosInstance from \"../User/axiosApi\";\nimport { Card, Form } from 'semantic-ui-react';\nimport { useHistory } from \"react-router-dom\";\nimport {Modal, Button} from \"react-bootstrap\";\nimport {AiFillPicture} from \"react-icons/ai\";\nimport {FiLink} from \"react-icons/fi\";\nimport {BsFillCameraVideoFill} from \"react-icons/bs\"\n\nfunction NewPost(props) {\n\n    let history = useHistory();\n\n    const handleClose = () => props.setShowPost(false);\n    const handleShow = () => props.setShowPost(true);\n\n    const[options, setOptions] = useState([]);\n    const[form, setForm] = useState({\n        group: null,\n        content: \"\",\n    });\n\n    useEffect(() => {\n        parseOptions()\n    }, []);   \n\n    async function parseOptions() {\n\n        var groups = await groupsFetch();\n\n        var options_arr = new Array();  \n\n        for (let idx in groups) { // this code makes no sense! :) but it works...\n            // console.log(group);\n            options_arr.push({\n                text: groups[idx].name, \n                value: groups[idx].id,\n            });\n        }\n\n        console.log(options_arr);\n\n        setOptions(options_arr);\n    };\n\n    async function groupsFetch() {\n        try {\n            var id = localStorage.getItem(\"user_id\");\n            const response = await axiosInstance.get('api/groups/user/' + id.toString() + \"/\");\n\n            return response.data;\n\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        try {\n            const response = await axiosInstance.post('api/posts/create/', {\n                group: form.group,\n                content: form.content,\n            });\n            if (response.status === 200) {\n                history.push('/');\n            }\n\n            console.log(response);\n\n            return response;\n        } catch (error) {\n            console.log(error.stack);\n        }\n    };\n\n    function handleChange(event) {\n        const obj = {...form};\n        obj.content = event.target.value;\n        setForm(obj);\n    }\n\n    const handleSelectChange = (e, { value }) => {\n        const obj = {...form};\n        obj.group = value; \n        setForm(obj);\n    }\n\n    return(\n        <div>\n\n\n            <Modal show={props.showpost} onHide={handleClose} />\n            <Modal.Header closeButton>\n                <Modal.Title>New Post</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form onSubmit={(e) => handleSubmit(e)}>\n                    <Form.Group widths='equal'>\n                        <Form.Select\n                            fluid \n                            label='Group'\n                            name='group'\n                            options={options}\n                            placeholder='Group'\n                            // value = {form.group}\n                            onChange = {handleSelectChange}\n                        />\n                    </Form.Group>\n                    <Form.TextArea name='content' label=\"Content\" placeholder=\"Talk to the World!\" onChange = {(e) => handleChange(e)}/>\n                    <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\n                    <Button variant=\"primary\" onClick={handleClose} type=\"submit\" value=\"submit\">Post</Button>\n                </Form>\n            </Modal.Body>\n        </div>\n    );\n}\n\nexport default NewPost;"]},"metadata":{},"sourceType":"module"}