{"ast":null,"code":"var _jsxFileName = \"/Users/joonyounglee/MITHACK/MITHack2020/client/src/Components/FeedCard.js\";\nimport React, { useState } from 'react';\nimport { Button, Icon, Label, Progress, Card, Image, List, Container, Popup, Header } from 'semantic-ui-react';\nimport Comments from \"../Components/Comments\";\nimport { Link } from \"react-router-dom\";\nimport { Nav } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport SubmitHeart from \"../APIComponents/SubmitHeart\";\nimport SubmitMatch from \"../APIComponents/SubmitMatch\";\nimport RemoveHeart from \"../APIComponents/RemoveHeart\";\nimport RemoveMatch from \"../APIComponents/RemoveMatch\";\n\nconst FeedCard = props => {\n  const [seeComments, setSeeComments] = React.useState(false);\n  const [hearted, setHeart] = React.useState(props.post.hearted);\n  const [matched, setMatch] = React.useState(props.post.isMatch ? props.post.matched : false);\n  const [hearts, setHearts] = React.useState(props.post.hearts > 0 ? props.post.hearts : 0);\n  const [comments, setComments] = React.useState(props.post.comments > 0 ? props.post.comments : 0);\n\n  const handleExpand = () => {\n    setSeeComments(!seeComments);\n  };\n\n  const post_id = props.post.id;\n  const user_id = props.curr_user;\n\n  async function handleCreateMatch() {\n    let response = await SubmitMatch({\n      author: user_id,\n      match_post: post_id\n    });\n\n    if (response.status === 201) {\n      setMatch(true);\n    } else {\n      console.log(\"unsuccessful match\");\n      console.log(response.status);\n    }\n  }\n\n  async function handleCreateHeart() {\n    let response = await SubmitHeart({\n      author: user_id,\n      post: post_id\n    });\n\n    if (response.status === 201) {\n      setHeart(true);\n      setHearts(hearts + 1);\n      props.updatePosts();\n    } else {\n      console.log(\"unsuccessful heart\");\n      console.log(response.status);\n    }\n  }\n\n  async function handleRemoveMatch() {\n    let response = await RemoveMatch(post_id, user_id);\n\n    if (response.status === 204) {\n      setMatch(false);\n    } else {\n      console.log('unsuccessful unmatch');\n      console.log(response.status);\n    }\n  }\n\n  async function handleRemoveHeart() {\n    let response = await RemoveHeart(post_id, user_id);\n\n    if (response.status === 204) {\n      setHeart(false);\n      setHearts(hearts - 1);\n      props.updatePosts();\n    } else {\n      console.log('unsuccessful unmatch');\n      console.log(response.status);\n    }\n  }\n\n  const handleMatch = () => {\n    if (matched) {\n      handleRemoveMatch();\n    } else {\n      handleCreateMatch();\n    }\n  };\n\n  const handleHeart = () => {\n    if (hearted) {\n      handleRemoveHeart();\n    } else {\n      handleCreateHeart();\n    }\n  };\n\n  if (props.isMatch) {\n    return /*#__PURE__*/React.createElement(Container, {\n      style: {\n        padding: \"10px\",\n        marginBottom: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: \"100%\",\n        padding: \"20px\",\n        textDecoration: \"none\"\n      } // href={'post/' + props.post.id + '/'}\n      ,\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      horizontal: true,\n      style: {\n        paddingLeft: \"15px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      horizontal: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        fontWeight: 'bold',\n        color: \"black\",\n        textDecoration: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 33\n      }\n    }, props.post.group.name))), /*#__PURE__*/React.createElement(Label, {\n      as: \"a\",\n      color: \"blue\",\n      style: {\n        float: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, props.post.group.theme)), /*#__PURE__*/React.createElement(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, props.post.content), /*#__PURE__*/React.createElement(LinkContainer, {\n      to: '/post/' + props.post.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }, \"I want \", props.post.goal, \" of you to join me.\"), /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      as: Link,\n      labelPosition: \"right\",\n      to: '/post/' + props.post.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"handshake outline\",\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 37\n      }\n    }), \"Match\"), /*#__PURE__*/React.createElement(Label, {\n      color: \"blue\",\n      basic: true,\n      pointing: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 33\n      }\n    }, props.post.matches > 0 ? props.post.matches : 0))), /*#__PURE__*/React.createElement(\"small\", {\n      style: {\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }, hearts, \" likes | \", comments, \" comments\")))), /*#__PURE__*/React.createElement(Card.Content, {\n      extra: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      horizontal: true,\n      selection: true,\n      style: {\n        marginLeft: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      content: \"Like\",\n      basic: true,\n      trigger: /*#__PURE__*/React.createElement(List.Item, {\n        onClick: handleHeart,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(List.Icon, {\n        name: hearted ? \"heart\" : \"heart outline\",\n        size: \"large\",\n        label: {\n          as: 'a',\n          corner: 'left',\n          value: props.post.hearts\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 33\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Popup, {\n      content: \"Comment\",\n      basic: true,\n      trigger: /*#__PURE__*/React.createElement(List.Item, {\n        onClick: handleExpand,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(List.Icon, {\n        name: seeComments ? \"comments\" : 'comments outline',\n        size: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 33\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(List.Item, {\n      float: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      avatar: true,\n      src: props.post.profile.image,\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(List.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(List.Header, {\n      as: \"a\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 41\n      }\n    }, props.post.author.first_name + \" \" + props.post.author.last_name), /*#__PURE__*/React.createElement(List.Description, {\n      as: \"a\",\n      style: {\n        fontSize: 13\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 41\n      }\n    }, \"Posted in \" + props.post.group.name))))), /*#__PURE__*/React.createElement(Comments, {\n      comments: props.post.comments,\n      img: props.img,\n      visible: seeComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(Container, {\n      style: {\n        margin: \"10px\",\n        marginBottom: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: \"100%\",\n        padding: \"20px\"\n      } // href={'post/' + props.post.id + '/'}\n      ,\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      horizontal: true,\n      style: {\n        paddingLeft: \"15px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      horizontal: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 33\n      }\n    }, props.post.group.name))), /*#__PURE__*/React.createElement(Label, {\n      as: \"a\",\n      color: \"blue\",\n      style: {\n        float: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 25\n      }\n    }, props.post.group.theme)), /*#__PURE__*/React.createElement(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 25\n      }\n    }, props.post.content), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 25\n      }\n    }, hearts, \" likes | \", comments, \" comments\")), /*#__PURE__*/React.createElement(Card.Content, {\n      extra: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      horizontal: true,\n      selection: true,\n      style: {\n        marginLeft: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      content: \"Like\",\n      basic: true,\n      trigger: /*#__PURE__*/React.createElement(List.Item, {\n        onClick: handleHeart,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(List.Icon, {\n        name: hearted ? \"heart\" : \"heart outline\",\n        size: \"large\",\n        label: {\n          as: 'a',\n          corner: 'left',\n          value: props.post.hearts\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 33\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Popup, {\n      content: \"Comment\",\n      basic: true,\n      trigger: /*#__PURE__*/React.createElement(List.Item, {\n        onClick: handleExpand,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(List.Icon, {\n        name: seeComments ? \"comments\" : 'comments outline',\n        size: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 33\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(List.Item, {\n      float: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      avatar: true,\n      src: props.post.profile.image,\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(List.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(List.Header, {\n      as: \"a\",\n      href: \"/profile/\" + props.post.author.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 41\n      }\n    }, props.post.author.first_name + \" \" + props.post.author.last_name), /*#__PURE__*/React.createElement(List.Description, {\n      as: \"a\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 41\n      }\n    }, \"Posted in \" + props.post.group.name))))), /*#__PURE__*/React.createElement(Comments, {\n      comments: props.post.comments,\n      img: props.img,\n      visible: seeComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 21\n      }\n    })));\n  }\n};\n\nconst styles = {\n  card: {\n    width: \"100%\"\n  }\n};\nexport default FeedCard;","map":{"version":3,"sources":["/Users/joonyounglee/MITHACK/MITHack2020/client/src/Components/FeedCard.js"],"names":["React","useState","Button","Icon","Label","Progress","Card","Image","List","Container","Popup","Header","Comments","Link","Nav","LinkContainer","SubmitHeart","SubmitMatch","RemoveHeart","RemoveMatch","FeedCard","props","seeComments","setSeeComments","hearted","setHeart","post","matched","setMatch","isMatch","hearts","setHearts","comments","setComments","handleExpand","post_id","id","user_id","curr_user","handleCreateMatch","response","author","match_post","status","console","log","handleCreateHeart","updatePosts","handleRemoveMatch","handleRemoveHeart","handleMatch","handleHeart","padding","marginBottom","width","textDecoration","paddingLeft","fontWeight","color","group","name","float","theme","content","goal","matches","marginLeft","as","corner","value","profile","image","first_name","last_name","fontSize","img","margin","styles","card"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\n\nimport {Button, Icon, Label, Progress, Card, Image, List, Container, Popup, Header} from 'semantic-ui-react';\n\nimport Comments from \"../Components/Comments\";\n\nimport {Link} from \"react-router-dom\";\nimport {Nav} from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nimport SubmitHeart from \"../APIComponents/SubmitHeart\";\nimport SubmitMatch from \"../APIComponents/SubmitMatch\";\nimport RemoveHeart from \"../APIComponents/RemoveHeart\";\nimport RemoveMatch from \"../APIComponents/RemoveMatch\";\n\nconst FeedCard = (props) => {\n\n    const [seeComments, setSeeComments] = React.useState(false);\n\n    const [hearted, setHeart] = React.useState(props.post.hearted);\n\n    const [matched, setMatch] = React.useState(props.post.isMatch ? props.post.matched : false);\n\n    const [hearts, setHearts] = React.useState(props.post.hearts > 0 ? props.post.hearts : 0)\n    const [comments, setComments] = React.useState(props.post.comments > 0 ? props.post.comments : 0)\n\n    const handleExpand = () => {\n        setSeeComments(!seeComments);\n    };\n\n    const post_id = props.post.id; \n    const user_id = props.curr_user; \n\n    async function handleCreateMatch() {\n        let response = await SubmitMatch({\n            author: user_id, \n            match_post: post_id, \n        })\n\n        if (response.status === 201) {\n            setMatch(true);\n        } else {\n            console.log(\"unsuccessful match\");\n            console.log(response.status);\n        }\n    }\n\n    async function handleCreateHeart() {\n        let response = await SubmitHeart({\n            author: user_id, \n            post: post_id, \n        })\n\n        if (response.status === 201) {\n            setHeart(true);\n            setHearts(hearts + 1);\n            props.updatePosts();\n        } else {\n            console.log(\"unsuccessful heart\");\n            console.log(response.status);\n        }\n\n    }\n\n    async function handleRemoveMatch() {\n        let response = await RemoveMatch(post_id, user_id);\n\n        if (response.status === 204) {\n            setMatch(false); \n        } else {\n            console.log('unsuccessful unmatch');\n            console.log(response.status);\n        }\n    }\n\n    async function handleRemoveHeart() {\n        let response = await RemoveHeart(post_id, user_id);\n\n        if (response.status === 204) {\n            setHeart(false); \n            setHearts(hearts-1)\n            props.updatePosts();\n        } else {\n            console.log('unsuccessful unmatch');\n            console.log(response.status);\n        }\n    }\n\n    const handleMatch = () => {\n        if (matched) {\n            handleRemoveMatch();\n        } else {\n            handleCreateMatch();\n        }\n    }\n\n    const handleHeart = () => {\n        if (hearted) {\n            handleRemoveHeart();\n        } else {\n            handleCreateHeart(); \n        }\n    }\n\n    if (props.isMatch) {\n        return (\n            <Container style={{padding: \"10px\", marginBottom: 30}}>\n                <Card \n                    style={{width: \"100%\", padding:\"20px\", textDecoration: \"none\"}}\n                    // href={'post/' + props.post.id + '/'}\n                    centered\n                >\n                    \n                    <Card.Header horizontal style={{paddingLeft:\"15px\"}}>\n                        <List horizontal>\n                            <List.Item>\n                                <h1 style={{fontWeight: 'bold', color: \"black\", textDecoration: \"none\"}}>\n                                    {props.post.group.name}\n                                </h1>\n                            </List.Item>\n                        </List>\n                        <Label\n                            as='a' \n                            color='blue'\n                            style={{float:'right'}}\n                        >\n                            {props.post.group.theme}\n                        </Label>\n\n                    </Card.Header>\n                    \n                    <Card.Content>\n                        <Header as='h2'>\n                            {props.post.content}\n                        </Header>\n                        <LinkContainer to={'/post/' + props.post.id}>\n                  <Nav.Link >\n                        <Header as='h4'>\n                            I want {props.post.goal} of you to join me.\n                        </Header>\n                        <Header>\n                            <Button \n                                as={Link} \n                                labelPosition='right'\n                                to={'/post/' + props.post.id}\n                                >\n                                <Button color='blue' \n                                    >\n                                    <Icon name='handshake outline' size='large' />\n                                    Match\n                                </Button>\n                                <Label color='blue' basic pointing='left'>\n                                    {props.post.matches > 0 ? props.post.matches : 0}\n                                </Label>\n                            </Button>\n                        </Header>\n                        <small style={{color: \"black\"}}>\n                            {hearts} likes | {comments} comments\n                        </small>\n                                       \n                     </Nav.Link>\n                </LinkContainer>\n                </Card.Content>\n\n                        {/* const GroupsCard = (props) => {\n    return(\n        <Card>\n            <Card.Content>\n            <Card.Header>{props.header}</Card.Header>\n            </Card.Content>\n      <Card.Content extra>\n        <List.Content>\n          <List selection vertical>\n                {props.groups.map(group => (\n                  <List.Item as={Link} to={\"/group/\" + group.id.toString()}>\n                    <Image avatar src={group.image}/>\n                    <List.Content>\n                      <List.Header>\n                        {group.name}\n                      </List.Header>\n                    </List.Content>\n                  </List.Item>\n                ))};\n            </List>\n        </List.Content>\n      </Card.Content>\n  </Card>\n  );\n} */}\n\n                    \n\n                    <Card.Content extra>\n                        <List horizontal selection style={{marginLeft: 5}}>\n                        <Popup content='Like' basic trigger={\n                            <List.Item\n                                onClick={handleHeart}\n                            >\n\n                                <List.Icon \n                                name={hearted ? \"heart\" : \"heart outline\"}\n                                size=\"large\"\n                                label={{as: 'a', corner: 'left', value: props.post.hearts}}\n                                >\n\n                                </List.Icon>\n\n                            </List.Item>\n                        } />\n                         <Popup content='Comment' basic trigger={\n                            <List.Item onClick={handleExpand}>\n                                <List.Icon \n                                \n                                name={seeComments ? \"comments\" : 'comments outline'}\n                                \n                                size='large' />\n                            </List.Item>\n                         } />\n\n                                <List.Item\n                                    float=\"right\"\n                                >\n                                    <Image avatar src={props.post.profile.image} size=\"small\" />\n                                    <List.Content>\n                                        <List.Header as='a'>\n                                            {props.post.author.first_name + \" \" + props.post.author.last_name}\n                                        </List.Header>\n                                        <List.Description as='a' style={{fontSize: 13}}>\n                                            {\"Posted in \" + props.post.group.name}\n                                        </List.Description>\n                                    </List.Content>\n                                </List.Item>\n\n                         {/* <Popup content='Match'  basic trigger={\n                                <List.Item as={Link} to={\"/post/\" + props.post.id.toString()} post={props.post} style={{textDecoration: \"none\"}}>\n                                    <List.Icon name='handshake outline' size='large' />\n                                </List.Item>\n                         } /> */}\n                        </List>\n                        \n                    </Card.Content>                    \n\n                    {/* <Header as='p' dividing style={{display: seeComments ? \"\" : \"none\"}}></Header> */}\n                    <Comments comments={props.post.comments} img={props.img} visible={seeComments}/>\n                </Card>\n\n                \n\n            </Container>\n        )\n    } else {\n        return (\n     \n            <Container style={{margin: \"10px\", marginBottom: 30}}>\n                <Card \n                    style={{width: \"100%\", padding:\"20px\"}}\n                    // href={'post/' + props.post.id + '/'}\n                    centered\n                >\n                    \n                    <Card.Header horizontal style={{paddingLeft:\"15px\"}}>\n                        <List horizontal>\n                            <List.Item>\n                                <h1 style={{fontWeight: 'bold'}}>\n                                    {props.post.group.name}\n\n                                </h1>\n                            </List.Item>\n                        </List>\n                        <Label\n                            as='a' \n                            color='blue'\n                            style={{float:'right'}}\n                        >\n                            {props.post.group.theme}\n                        </Label>\n\n                    </Card.Header>\n\n                    <Card.Content>\n                        <Header as='h4'>\n                            {props.post.content}\n                        </Header>\n                        <small>\n                            {hearts} likes | {comments} comments\n                        </small>\n\n                    </Card.Content>\n\n                    <Card.Content extra>\n                        <List horizontal selection style={{marginLeft: 5}}>\n                        <Popup content='Like' basic trigger={\n                            <List.Item\n                                onClick={handleHeart}\n                            >\n\n                                <List.Icon \n                                name={hearted ? \"heart\" : \"heart outline\"}\n                                size=\"large\"\n                                label={{as: 'a', corner: 'left', value: props.post.hearts}}\n                                >\n\n                                </List.Icon>\n\n                            </List.Item>\n                        } />\n                         <Popup content='Comment' basic trigger={\n                            <List.Item onClick={handleExpand}>\n                                <List.Icon \n                                \n                                name={seeComments ? \"comments\" : 'comments outline'}\n                                \n                                size='large' />\n                            </List.Item>\n                         } />\n\n                                <List.Item\n                                    float=\"right\"\n                                >\n                                    <Image avatar src={props.post.profile.image} size=\"small\" />\n                                    <List.Content>\n                                        <List.Header \n                                            as='a'\n                                            href={\"/profile/\" + props.post.author.id}\n                                        >\n                                            {props.post.author.first_name + \" \" + props.post.author.last_name}\n                                        </List.Header>\n                                        <List.Description as='a'>\n                                            {\"Posted in \" + props.post.group.name}\n                                        </List.Description>\n                                    </List.Content>\n                                </List.Item>\n\n                         {/* <Popup content='Match'  basic trigger={\n                                <List.Item as={Link} to={\"/post/\" + props.post.id.toString()} post={props.post} style={{textDecoration: \"none\"}}>\n                                    <List.Icon name='handshake outline' size='large' />\n                                </List.Item>\n                         } /> */}\n                        </List>\n                        \n                    </Card.Content>                    \n\n                    {/* <Header as='p' dividing style={{display: seeComments ? \"\" : \"none\"}}></Header> */}\n                    <Comments comments={props.post.comments} img={props.img} visible={seeComments}/>\n                </Card>\n\n                \n\n            </Container>\n\n\n\n        )\n    }\n}\n\nconst styles = {\n    card: {\n        width: \"100%\",\n        \n    },\n}\n\nexport default FeedCard;\n"]},"metadata":{},"sourceType":"module"}