{"ast":null,"code":"var _jsxFileName = \"/Users/joonyounglee/MITHACK/MITHack2020/client/src/Components/NewPost.js\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport axiosInstance from \"../User/axiosApi\";\nimport { Modal, Card, Form, Image, List, Transition, Button, Popup, TextArea, Input } from 'semantic-ui-react';\nimport { useHistory } from \"react-router-dom\";\nimport { AiFillPicture, AiFillPropertySafety } from \"react-icons/ai\";\nimport { FiLink } from \"react-icons/fi\";\nimport { BsFillCameraVideoFill } from \"react-icons/bs\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst NewPost = props => {\n  let history = useHistory();\n  const [options, setOptions] = useState([]);\n  const [form, setForm] = useState({\n    group: null,\n    content: \"\"\n  });\n  const [match_form, setMatchForm] = useState({\n    group: null,\n    content: \"\",\n    isMatch: true,\n    goal: 10\n  }); // fields = ['id', 'content', 'group', 'author']\n  // optional_fields = ['hearts', 'matches', 'isMatch', 'goal']\n\n  useEffect(() => {\n    parseOptions();\n  }, []);\n\n  async function parseOptions() {\n    var groups = await groupsFetch();\n    var options_arr = new Array();\n\n    for (let idx in groups) {\n      // this code makes no sense! :) but it works...\n      // console.log(group);\n      options_arr.push({\n        text: groups[idx].name,\n        value: groups[idx].id\n      });\n    }\n\n    console.log(options_arr);\n    setOptions(options_arr);\n  }\n\n  ;\n\n  async function groupsFetch() {\n    try {\n      var id = localStorage.getItem(\"user_id\");\n      const response = await axiosInstance.get('api/groups/user/' + id.toString() + \"/\");\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  ;\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    try {\n      const response = await axiosInstance.post('api/posts/create/', {\n        group: form.group,\n        content: form.content\n      });\n\n      if (response.status === 200) {\n        // history.push('/');\n        props.handlePostChange({\n          type: 'CLOSE_MODAL'\n        });\n      }\n\n      console.log(response);\n      return response;\n    } catch (error) {\n      console.log(error.stack);\n    }\n  }\n\n  ;\n\n  async function handleMatchSubmit(event) {\n    event.preventDefault();\n\n    try {\n      const response = await axiosInstance.post('api/posts/create/', {\n        group: match_form.group,\n        content: match_form.content,\n        isMatch: match_form.isMatch,\n        goal: match_form.goal\n      });\n\n      if (response.status == 200) {\n        props.handleMatchPostChange({\n          type: 'CLOSE_MODAL'\n        });\n      }\n\n      console.log(response);\n      return response;\n    } catch (error) {\n      console.log(error.stack);\n    }\n  }\n\n  const handleChange = (e, {\n    value\n  }) => {\n    const obj = { ...match_form\n    };\n    obj.content = value;\n    setForm(obj);\n  };\n\n  const handleSelectChange = (e, {\n    value\n  }) => {\n    const obj = { ...form\n    };\n    obj.group = value;\n    setForm(obj);\n  };\n\n  const handleMatchChange = (e, {\n    value\n  }) => {\n    const obj = { ...match_form\n    };\n    obj.content = value;\n    setMatchForm(obj);\n  };\n\n  const handleMatchSelectChange = (e, {\n    value\n  }) => {\n    const obj = { ...match_form\n    };\n    obj.group = value;\n    setMatchForm(obj);\n  };\n\n  const handleGoalChange = (e, value) => {\n    const obj = { ...match_form\n    };\n    obj.goal = value;\n    setMatchForm(obj);\n  };\n\n  const handleBlur = () => {\n    if (match_form.goal < 0) {\n      handleGoalChange('', 0);\n    } else if (match_form.goal > 1000) {\n      handleGoalChange('', 1000);\n    }\n  };\n\n  const handleGoalInputChange = event => {\n    handleGoalChange('', event.target.value === '' ? '' : Number(event.target.value));\n  }; //     <div class=\"ui middle aligned selection list\">\n  //     {props.groups.map(group => (\n  //       <div class=\"item\">\n  //         <img class=\"ui avatar image\" src={group.image}/>\n  //         <div class=\"content\">\n  //     <div class=\"header\">{group.name}</div>\n  //         </div>\n  //       </div>\n  //     ))}\n  //   </div>\n\n\n  {\n    /* <Profile src={require(\"./Images/man.png\")} username=\"Joon Young Treet\" inspired={33} matched={40} groups={groups}/> */\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: styles.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    selection: true,\n    horizontal: true,\n    verticalAlign: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(List.Item, {\n    onClick: () => props.handlePostChange({\n      type: 'OPEN_MODAL'\n    }),\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    avatar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(List.Icon, {\n    name: \"edit outline\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(List.Content, {\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 33\n    }\n  }, \"Talk to the World!\"))), /*#__PURE__*/React.createElement(List.Item, {\n    onClick: () => props.handleMatchPostChange({\n      type: 'OPEN_MODAL'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    avatar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(List.Icon, {\n    name: \"bullhorn\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(List.Content, {\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 33\n    }\n  }, \"Initiate Action!\")))), /*#__PURE__*/React.createElement(List, {\n    selection: true,\n    horizontal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Popup, {\n    content: \"Link\",\n    basic: true,\n    trigger: /*#__PURE__*/React.createElement(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(List.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FiLink, {\n      size: 30,\n      className: \"attachButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 29\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Popup, {\n    content: \"Image/Video\",\n    trigger: /*#__PURE__*/React.createElement(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(List.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(AiFillPicture, {\n      size: 35,\n      className: \"attachButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 29\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Popup, {\n    content: \"Event\",\n    trigger: /*#__PURE__*/React.createElement(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(List.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      size: 30,\n      className: \"attachButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(List.Icon, {\n      name: \"map pin\",\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 33\n      }\n    })))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Transition, {\n    visible: props.state.showpost,\n    animation: \"scale\",\n    duration: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    dimmer: props.state.dimmer,\n    open: props.state.showpost,\n    onClose: () => props.handlePostChange({\n      type: 'CLOSE_MODAL'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 21\n    }\n  }, \"New Post\"), /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    verticalAlign: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(List.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    avatar: true,\n    src: props.profile.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(List.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 33\n    }\n  }, props.name))), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: e => handleSubmit(e),\n    id: \"new-post-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Select, {\n    required: true,\n    fluid: true,\n    name: \"group\",\n    options: options,\n    placeholder: \"What group do you want to share to?\" // value = {form.group}\n    ,\n    onChange: handleSelectChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    control: Input,\n    required: true,\n    name: \"content\",\n    placeholder: \"What is the quick version?\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Field, {\n    required: true,\n    control: TextArea,\n    name: \"reason\",\n    placeholder: \"Tell us more.\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Modal.Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"black\",\n    onClick: () => props.handlePostChange({\n      type: 'CLOSE_MODAL'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 29\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    positive: true,\n    type: \"submit\",\n    value: \"submit\",\n    form: \"new-post-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 29\n    }\n  }, \"Post\")))), /*#__PURE__*/React.createElement(Transition, {\n    visible: props.match_state.showpost,\n    animation: \"scale\",\n    duration: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    closeIcon: true,\n    dimmer: props.match_state.dimmer,\n    open: props.match_state.showpost,\n    onClose: () => props.handleMatchPostChange({\n      type: 'CLOSE_MODAL'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 21\n    }\n  }, \"New Action\"), /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    verticalAlign: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(List.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    avatar: true,\n    src: props.profile.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(List.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 33\n    }\n  }, props.name))), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: e => handleMatchSubmit(e),\n    id: \"new-post-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Select, {\n    fluid: true // label='Group'\n    ,\n    name: \"group\",\n    options: options,\n    placeholder: \"What group did you want to share to?\" // value = {form.group}\n    ,\n    onChange: handleMatchSelectChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    control: Input,\n    required: true,\n    name: \"content\",\n    placeholder: \"What action did you take?\",\n    onChange: handleMatchChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Field, {\n    required: true,\n    control: TextArea,\n    name: \"reason\",\n    placeholder: \"Tell us your reason for taking it.\",\n    onChange: handleMatchChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Group, {\n    style: styles.slider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    id: \"goal-slider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 33\n    }\n  }, \"Match Goal\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    value: typeof match_form.goal === 'number' ? match_form.goal : 0,\n    name: \"goal\",\n    min: 10,\n    max: 1000,\n    step: 10,\n    valueLabelDisplay: \"off\",\n    onChange: handleGoalChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: styles.input,\n    value: match_form.goal,\n    margin: \"dense\",\n    onChange: handleGoalInputChange,\n    onBlur: handleBlur,\n    inputProps: {\n      step: 10,\n      min: 0,\n      max: 1000,\n      type: 'number'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 41\n    }\n  })))))), /*#__PURE__*/React.createElement(Modal.Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"black\",\n    onClick: () => props.handleMatchPostChange({\n      type: 'CLOSE_MODAL'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 29\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    positive: true,\n    type: \"submit\",\n    value: \"submit\",\n    form: \"new-post-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 29\n    }\n  }, \"Post\")))));\n};\n\nconst styles = {\n  card: {\n    padding: 10,\n    width: \"100%\",\n    display: \"flex\",\n    \"flex-direction\": \"column\",\n    \"align-items\": \"center\"\n  },\n  slider: {\n    display: \"flex\",\n    \"flex-direction\": \"column\",\n    \"align-items\": \"center\"\n  },\n  input: {\n    width: 42\n  }\n};\nexport default NewPost;","map":{"version":3,"sources":["/Users/joonyounglee/MITHACK/MITHack2020/client/src/Components/NewPost.js"],"names":["React","Component","useState","useEffect","axiosInstance","Modal","Card","Form","Image","List","Transition","Button","Popup","TextArea","Input","useHistory","AiFillPicture","AiFillPropertySafety","FiLink","BsFillCameraVideoFill","Typography","Slider","Grid","NewPost","props","history","options","setOptions","form","setForm","group","content","match_form","setMatchForm","isMatch","goal","parseOptions","groups","groupsFetch","options_arr","Array","idx","push","text","name","value","id","console","log","localStorage","getItem","response","get","toString","data","error","handleSubmit","event","preventDefault","post","status","handlePostChange","type","stack","handleMatchSubmit","handleMatchPostChange","handleChange","e","obj","handleSelectChange","handleMatchChange","handleMatchSelectChange","handleGoalChange","handleBlur","handleGoalInputChange","target","Number","styles","card","flexDirection","justifyContent","alignItems","state","showpost","dimmer","profile","image","match_state","slider","input","step","min","max","padding","width","display"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport axiosInstance from \"../User/axiosApi\";\nimport { Modal, Card, Form, Image, List, Transition, Button, Popup, TextArea, Input } from 'semantic-ui-react';\nimport { useHistory } from \"react-router-dom\";\nimport {AiFillPicture, AiFillPropertySafety} from \"react-icons/ai\";\nimport {FiLink} from \"react-icons/fi\";\nimport {BsFillCameraVideoFill} from \"react-icons/bs\"\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst NewPost = (props) => {\n\n    let history = useHistory();\n\n    const[options, setOptions] = useState([]);\n    const[form, setForm] = useState({\n        group: null,\n        content: \"\",\n    });\n    const [match_form, setMatchForm] = useState({\n        group: null, \n        content: \"\",\n        isMatch: true, \n        goal: 10, \n    })\n\n\n    // fields = ['id', 'content', 'group', 'author']\n    // optional_fields = ['hearts', 'matches', 'isMatch', 'goal']\n\n\n\n\n    useEffect(() => {\n        parseOptions()\n    }, []);   \n\n    async function parseOptions() {\n\n        var groups = await groupsFetch();\n\n        var options_arr = new Array();  \n\n        for (let idx in groups) { // this code makes no sense! :) but it works...\n            // console.log(group);\n            options_arr.push({\n                text: groups[idx].name, \n                value: groups[idx].id,\n            });\n        }\n\n        console.log(options_arr);\n\n        setOptions(options_arr);\n    };\n\n    async function groupsFetch() {\n        try {\n            var id = localStorage.getItem(\"user_id\");\n            const response = await axiosInstance.get('api/groups/user/' + id.toString() + \"/\");\n\n            return response.data;\n\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        try {\n            const response = await axiosInstance.post('api/posts/create/', {\n                group: form.group,\n                content: form.content,\n            });\n\n            if (response.status === 200) {\n                // history.push('/');\n                props.handlePostChange({type: 'CLOSE_MODAL'})\n            }\n\n            console.log(response);\n\n            return response;\n        } catch (error) {\n            console.log(error.stack);\n        }\n    };\n\n    async function handleMatchSubmit(event) {\n        event.preventDefault();\n        try {\n            const response = await axiosInstance.post('api/posts/create/', {\n                group: match_form.group, \n                content: match_form.content,\n                isMatch: match_form.isMatch, \n                goal: match_form.goal, \n            });\n\n            if (response.status == 200) {\n                props.handleMatchPostChange({type: 'CLOSE_MODAL'})\n            }\n\n            console.log(response);\n\n            return response; \n\n\n        } catch (error) {\n            console.log(error.stack);\n        }\n    }\n\n    const handleChange = (e, { value })  => {\n        const obj = {...match_form};\n        obj.content = value; \n        setForm(obj); \n    }\n\n    const handleSelectChange = (e, { value }) => {\n        const obj = {...form};\n        obj.group = value; \n        setForm(obj);\n    }\n\n\n    const handleMatchChange = (e, { value })  => {\n        const obj = {...match_form};\n        obj.content = value; \n        setMatchForm(obj); \n    }\n\n\n    const handleMatchSelectChange = (e, { value }) => {\n        const obj = {...match_form};\n        obj.group = value; \n        setMatchForm(obj);\n    }\n\n    const handleGoalChange = (e, value) => {\n        const obj = {...match_form};\n        obj.goal = value; \n        setMatchForm(obj);\n    }\n\n    const handleBlur = () => {\n        if (match_form.goal < 0) {\n            handleGoalChange('', 0);\n        } else if (match_form.goal > 1000) {\n            handleGoalChange('', 1000);\n        }\n    }\n\n    const handleGoalInputChange = (event) => {\n        handleGoalChange('', event.target.value === '' ? '' : Number(event.target.value));\n    }\n\n\n//     <div class=\"ui middle aligned selection list\">\n//     {props.groups.map(group => (\n//       <div class=\"item\">\n//         <img class=\"ui avatar image\" src={group.image}/>\n//         <div class=\"content\">\n//     <div class=\"header\">{group.name}</div>\n//         </div>\n//       </div>\n//     ))}\n//   </div>\n\n{/* <Profile src={require(\"./Images/man.png\")} username=\"Joon Young Treet\" inspired={33} matched={40} groups={groups}/> */}\n\n\n\n    return (\n        <div>\n            <Card style={styles.card} >\n                <List selection horizontal verticalAlign='middle'>\n                    <List.Item onClick={() => props.handlePostChange({type: 'OPEN_MODAL' })} style={{flexDirection: \"row\", justifyContent: \"center\", alignItems: \"center\"}}>\n                        <Image avatar>\n                            <List.Icon name=\"edit outline\" size=\"large\" />\n                        </Image>\n                        <List.Content style={{}}>\n                                <h5>Talk to the World!</h5>\n                        </List.Content>\n                    </List.Item>\n                    <List.Item onClick={() => props.handleMatchPostChange({type: 'OPEN_MODAL'})}>\n                        <Image avatar>\n                            <List.Icon name=\"bullhorn\" size=\"large\" />\n                        </Image>                        \n                        <List.Content style={{}}>\n                                <h5>Initiate Action!</h5>\n                        </List.Content>\n                    </List.Item>\n                </List>\n                <List selection horizontal>\n                <Popup content='Link' basic trigger={\n                    <List.Item>\n                        <List.Content>\n                            <FiLink size = {30} className=\"attachButton\"/>\n                        </List.Content>\n                    </List.Item>\n                } />\n                <Popup content='Image/Video' trigger={\n                    <List.Item>\n                        <List.Content>\n                            <AiFillPicture size={35} className=\"attachButton\"/>\n                        </List.Content>\n                    </List.Item>\n                } />\n                <Popup content='Event' trigger={\n                    <List.Item>\n                        <List.Content>\n                            <Image size={30} className=\"attachButton\">\n                                <List.Icon name = \"map pin\" size=\"large\" />\n                            </Image>\n                        </List.Content>\n                    </List.Item>\n                } />\n                </List>\n\n                {/* <a style={{color:\"gray\", marginTop: \"auto\", marginBottom: \"auto\", marginLeft: 30}}><FiLink size={30} className=\"attachButton\"/></a>\n                <a style={{color:\"gray\", marginTop: \"auto\", marginBottom: \"auto\", marginLeft: 18}}><AiFillPicture size={35} className=\"attachButton\"/></a>\n                <a style={{color:\"gray\", marginTop: \"auto\", marginBottom: \"auto\", marginLeft: 18}}><BsFillCameraVideoFill size={30} className=\"attachButton\"  /></a> */}\n            </Card>\n\n            <Transition visible={props.state.showpost} animation='scale' duration={500}>\n                <Modal \n                    dimmer={props.state.dimmer}\n                    open={props.state.showpost}\n                    onClose = {() => props.handlePostChange({ type: 'CLOSE_MODAL' })}\n                >\n                    <Modal.Header>\n                        New Post\n                    </Modal.Header>\n\n                    <Modal.Content>\n                        <List verticalAlign=\"middle\">\n                            <List.Item>\n                                <Image avatar src={props.profile.image} />\n                                <List.Content>\n                                    {props.name}\n                                </List.Content>\n                            </List.Item>\n                        </List>\n                        <Form onSubmit={(e) => handleSubmit(e)} id=\"new-post-form\">\n                            <Form.Group widths='equal'>\n                                <Form.Select\n                                    required \n                                    fluid \n                                    name='group'\n                                    options={options}\n                                    placeholder='What group do you want to share to?'\n                                    // value = {form.group}\n                                    onChange = {handleSelectChange}\n                                />\n                            </Form.Group>\n\n                            <Form.Field control={Input} required name='content'  placeholder=\"What is the quick version?\" onChange = {handleChange}/>\n\n                            <Form.Field \n                                required \n                                control={TextArea}\n                                name='reason'\n                                placeholder='Tell us more.'\n                                onChange = {handleChange}\n                            />\n\n                        </Form>\n                    </Modal.Content>\n                    <Modal.Actions>\n                            <Button color=\"black\" onClick={() => props.handlePostChange({type: 'CLOSE_MODAL' })}>Close</Button>\n                            <Button positive type=\"submit\" value=\"submit\" form=\"new-post-form\">Post</Button>\n                    </Modal.Actions>\n\n                </Modal>\n            </Transition>\n\n            <Transition visible={props.match_state.showpost} animation='scale' duration={500}>\n                <Modal \n                    closeIcon\n                    dimmer={props.match_state.dimmer}\n                    open={props.match_state.showpost}\n                    onClose = {() => props.handleMatchPostChange({ type: 'CLOSE_MODAL' })}\n                >\n                    <Modal.Header>\n                        New Action\n                    </Modal.Header>\n\n                    <Modal.Content>\n                        <List verticalAlign=\"middle\">\n                            <List.Item>\n                                <Image avatar src={props.profile.image} />\n                                <List.Content>\n                                    {props.name}\n                                </List.Content>\n                            </List.Item>\n                        </List>\n                        <Form onSubmit={(e) => handleMatchSubmit(e)} id=\"new-post-form\">\n                            <Form.Group widths='equal'>\n                                <Form.Select\n                                    fluid \n                                    // label='Group'\n                                    name='group'\n                                    options={options}\n                                    placeholder='What group did you want to share to?'\n                                    // value = {form.group}\n                                    onChange = {handleMatchSelectChange}\n                                />\n                            </Form.Group>\n                            <Form.Field control={Input} required name='content'  placeholder=\"What action did you take?\" onChange = {handleMatchChange}/>\n\n                            <Form.Field \n                                required \n                                control={TextArea}\n                                name='reason'\n                                placeholder='Tell us your reason for taking it.'\n                                onChange = {handleMatchChange}\n                            />\n\n                            <Form.Group style={styles.slider}>\n                                <Typography id=\"goal-slider\">\n                                    Match Goal \n                                </Typography>\n                                <Grid container spacing = {2} alignItems=\"center\">\n                                    <Grid item xs>\n                                        <Slider \n                                        value={typeof match_form.goal === 'number' ? match_form.goal : 0}\n                                        name=\"goal\"\n                                        min={10}\n                                        max={1000}\n                                        step={10}\n                                        valueLabelDisplay=\"off\"\n                                        onChange={handleGoalChange}\n                                        />    \n                                    </Grid>\n                                    <Grid item>\n                                        <Input \n                                            className={styles.input}\n                                            value={match_form.goal}\n                                            margin=\"dense\"\n                                            onChange={handleGoalInputChange}\n                                            onBlur={handleBlur}\n                                            inputProps={{\n                                                step: 10, \n                                                min: 0, \n                                                max: 1000, \n                                                type: 'number',\n                                            }}\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </Form.Group>\n\n                        </Form>\n                    </Modal.Content>\n                    <Modal.Actions>\n                            <Button color=\"black\" onClick={() => props.handleMatchPostChange({type: 'CLOSE_MODAL' })}>Close</Button>\n                            <Button positive type=\"submit\" value=\"submit\" form=\"new-post-form\">Post</Button>\n                    </Modal.Actions>\n\n                </Modal>\n            </Transition>\n\n        </div>\n    );\n}\n\n\nconst styles = {\n    card: {\n        padding: 10,\n        width: \"100%\",\n        display: \"flex\",\n        \"flex-direction\": \"column\",\n        \"align-items\": \"center\",\n    },\n    slider: {\n        display: \"flex\",\n        \"flex-direction\": \"column\",\n        \"align-items\": \"center\",\n    },\n    input: {\n        width: 42, \n    }\n}\n\n\nexport default NewPost;"]},"metadata":{},"sourceType":"module"}