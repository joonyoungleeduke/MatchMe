{"ast":null,"code":"var _jsxFileName = \"/Users/joonyounglee/MITHACK/MITHack2020/client/src/Components/Posts.js\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport { render } from \"react-dom\";\nimport axiosInstance from \"../User/axiosApi\";\nimport GroupInfo from \"../Components/GroupInfo\";\nimport UserInfo from \"../Components/UserInfo\";\nimport ProfileInfo from \"../Components/ProfileInfo\";\n\nfunction Posts() {\n  const [posts, setPosts] = useState([]);\n  const [matches, setMatches] = useState([]);\n  useEffect(() => {\n    postFetch({\n      limit: 10\n    });\n  }, []);\n\n  async function parsePosts(data) {\n    let posts = data.filter(post => post.isMatch === false);\n    let matches = data.filter(post => post.isMatch === true);\n\n    for (let idx in posts) {\n      posts[idx].group = await GroupInfo(posts[idx].group);\n      posts[idx]['profile'] = await ProfileInfo(posts[idx].author);\n      posts[idx].author = await UserInfo(posts[idx].author);\n    }\n\n    for (let idx in matches) {\n      matches[idx].group = await GroupInfo(matches[idx].group);\n      posts[idx]['profile'] = await ProfileInfo(posts[idx].author);\n      matches[idx].author = await UserInfo(matches[idx].author);\n    }\n\n    setPosts(posts);\n    setMatches(matches);\n  }\n\n  async function postFetch(pagination) {\n    try {\n      var limit = pagination.limit;\n      var id = localStorage.getItem(\"user_id\");\n      const response = await axiosInstance.get('api/posts/interests/' + id.toString() + \"/\" + limit.toString() + \"/\");\n      const data = response.data;\n      await parsePosts(data);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, matches.map(match => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, \"MATCH POST\"), match.content, match.hearts, match.author.first_name, match.author.last_name, match.group.name, match.group.description, match.matches, match.goal)), posts.map(post => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, \"REGULAR POST\"), post.content, post.hearts, post.author.first_name, post.author.last_name, post.group.name, post.group.description)));\n}\n\nexport default Posts;","map":{"version":3,"sources":["/Users/joonyounglee/MITHACK/MITHack2020/client/src/Components/Posts.js"],"names":["React","Component","useState","useEffect","render","axiosInstance","GroupInfo","UserInfo","ProfileInfo","Posts","posts","setPosts","matches","setMatches","postFetch","limit","parsePosts","data","filter","post","isMatch","idx","group","author","pagination","id","localStorage","getItem","response","get","toString","error","console","log","map","match","content","hearts","first_name","last_name","name","description","goal"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { render } from \"react-dom\";\nimport axiosInstance from \"../User/axiosApi\";\nimport GroupInfo from \"../Components/GroupInfo\";\nimport UserInfo from \"../Components/UserInfo\";\nimport ProfileInfo from \"../Components/ProfileInfo\";\n\n\nfunction Posts() {\n    const [posts, setPosts] = useState([]);\n    const [matches, setMatches] = useState([]); \n\n    useEffect(() => {\n        postFetch({ limit:10 });\n    }, []);    \n\n    async function parsePosts(data) {\n        let posts = data.filter(post => post.isMatch === false);\n        let matches = data.filter(post => post.isMatch === true);\n\n        for (let idx in posts) {\n            posts[idx].group = await GroupInfo(posts[idx].group);\n            posts[idx]['profile'] = await ProfileInfo(posts[idx].author);\n            posts[idx].author = await UserInfo(posts[idx].author);\n        }\n        for (let idx in matches) {\n            matches[idx].group = await GroupInfo(matches[idx].group);\n            posts[idx]['profile'] = await ProfileInfo(posts[idx].author);\n            matches[idx].author = await UserInfo(matches[idx].author);\n        }\n\n        setPosts(posts);\n        setMatches(matches);\n\n    }\n\n    async function postFetch(pagination) {\n        try {\n            var limit = pagination.limit; \n            var id = localStorage.getItem(\"user_id\");\n            const response = await axiosInstance.get('api/posts/interests/' + id.toString() + \"/\" + limit.toString() + \"/\");\n            \n            const data = response.data;\n\n            await parsePosts(data);\n\n            return response.data; \n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    return (\n        <div>\n            {/* <InfiniteScroll\n                pageStart = {0}\n                loadMore = {() => postFetch({ limit: posts.length + matches.length + 10 })}\n                hasMore = {true || false}\n                useWindow = {false}\n                loader = {\n                    <div key=\"loading\" className=\"loader\">\n                        Loading...\n                    </div>\n                }\n            >  */}\n                {matches.map(match => (\n                    <div>\n                        <h1>MATCH POST</h1>\n                        {match.content}\n                        {match.hearts}\n                        {match.author.first_name}\n                        {match.author.last_name}\n                        {match.group.name}\n                        {match.group.description}\n                        {match.matches}\n                        {match.goal}\n                    </div>\n                ))\n\n                }\n                {posts.map(post => (\n                    <div>\n                        <h1>REGULAR POST</h1>\n                        {post.content}\n                        {post.hearts}\n                        {post.author.first_name}\n                        {post.author.last_name}\n                        {post.group.name}\n                        {post.group.description}\n                    </div>\n                ))}\n            {/* </InfiniteScroll> */}\n        </div>\n    );\n\n}\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}