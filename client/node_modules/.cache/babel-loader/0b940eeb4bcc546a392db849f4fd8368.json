{"ast":null,"code":"var _jsxFileName = \"/Users/joonyounglee/MITHACK/MITHack2020/client/src/Components/FeedCard.js\";\nimport React, { useState } from 'react';\nimport { Button, Icon, Label, Progress, Card, Image } from 'semantic-ui-react';\n\nconst FeedCard = props => {\n  const [seeComments, setSeeComments] = React.useState(false);\n\n  const handleExpand = () => {\n    setSeeComments(!seeComments);\n  }; //     <Card>\n  //     <Card.Content header='Suggested Groups' />\n  //     <Card.Content extra>\n  //       <div class=\"ui middle aligned selection list\">\n  //         {props.groups.map(group => (\n  //           <div class=\"item\">\n  //             <img class=\"ui avatar image\" src={group.image}/>\n  //             <div class=\"content\">\n  //         <div class=\"header\">{group.name}</div>\n  //             </div>\n  //           </div>\n  //         ))}\n  //       </div>\n  //     </Card.Content>\n  // </Card>\n\n\n  if (props.isMatch) {\n    return /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"ui middle aligned selection list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      class: \"ui avatar image\",\n      src: props.post.profile.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 37\n      }\n    }, props.post.author.first_name + \" \" + props.post.author.last_name))))), /*#__PURE__*/React.createElement(Card.Meta, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, \"Posted in \" + props.post.group.name), /*#__PURE__*/React.createElement(Card.Description, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, props.post.content), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      content: \"Heart\",\n      icon: \"heart\",\n      label: {\n        as: 'a',\n        basic: true,\n        content: props.post.hearts\n      },\n      labelPosition: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      content: \"Match\",\n      icon: \"handshake outline\",\n      label: {\n        as: 'a',\n        basic: true,\n        content: props.post.matches\n      },\n      labelPosition: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Card.Content, {\n      extra: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Progress, {\n      color: \"green\",\n      percent: (props.post.matches / props.post.goal * 100).toFixed(3),\n      autoSuccess: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, \"test\");\n  }\n};\n\nconst styles = {\n  card: {\n    width: \"100%\"\n  }\n};\n{\n  /* <div>\n  <h1>MATCH POST</h1>\n  {match.content}\n  {match.hearts}\n  {match.author.first_name}\n  {match.author.last_name}\n  <img src={match.profile.image} />\n  {match.group.name}\n  {match.group.description}\n  {match.matches}\n  {match.goal}\n  </div> */\n} // {posts.map(post => (\n//     <div>\n//         <h1>REGULAR POST</h1>\n//         {post.content}\n//         {post.hearts}\n//         {post.author.first_name}\n//         {post.author.last_name}\n//         {post.group.name}\n//         {post.group.description}\n//     </div>\n// ))}\n\nexport default FeedCard;","map":{"version":3,"sources":["/Users/joonyounglee/MITHACK/MITHack2020/client/src/Components/FeedCard.js"],"names":["React","useState","Button","Icon","Label","Progress","Card","Image","FeedCard","props","seeComments","setSeeComments","handleExpand","isMatch","width","post","profile","image","author","first_name","last_name","group","name","content","as","basic","hearts","matches","goal","toFixed","styles","card"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\n\nimport {Button, Icon, Label, Progress, Card, Image} from 'semantic-ui-react';\n\n\n\nconst FeedCard = (props) => {\n    const [seeComments, setSeeComments] = React.useState(false);\n\n    const handleExpand = () => {\n        setSeeComments(!seeComments);\n    };\n\n\n//     <Card>\n//     <Card.Content header='Suggested Groups' />\n//     <Card.Content extra>\n//       <div class=\"ui middle aligned selection list\">\n//         {props.groups.map(group => (\n//           <div class=\"item\">\n//             <img class=\"ui avatar image\" src={group.image}/>\n//             <div class=\"content\">\n//         <div class=\"header\">{group.name}</div>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </Card.Content>\n// </Card>\n\n\n    if (props.isMatch) {\n        return (\n            <Card style={{width: \"100%\"}}>\n                {/* <Label as='a' color='red' ribbon>\n                        Action\n                </Label> */}\n                <Card.Content>\n                    <Card.Header>\n                        <div class=\"ui middle aligned selection list\">\n                            <div class=\"item\">\n                                <img class=\"ui avatar image\" src={props.post.profile.image} />\n                                <div class=\"content\">\n                                    <div class='header'>\n                                        {props.post.author.first_name + \" \" + props.post.author.last_name}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </Card.Header>\n\n\n                    {/* <Image \n                        avatar\n                        floated=\"right\"\n                        size=\"mini\"\n                        src={props.post.profile.image}\n                    />\n                    <Card.Header>{props.post.author.first_name + \" \" + props.post.author.last_name}</Card.Header> */}\n                    <Card.Meta>{\"Posted in \" + props.post.group.name}</Card.Meta>\n                    <Card.Description>\n                        {props.post.content}\n                    </Card.Description>\n\n                    <br></br>\n\n                    <div>\n                        <Button\n                            content='Heart'\n                            icon='heart'\n                            label={{ as: 'a', basic: true, content: props.post.hearts }}      \n                            labelPosition = 'right' /> \n\n                        <Button\n                            content='Match'\n                            icon='handshake outline'\n                            label={{ as: 'a', basic:true, content: props.post.matches }}\n                            labelPosition = 'right'\n                        />                \n\n                    </div>\n\n                </Card.Content>\n                <Card.Content extra>\n                    <Progress color=\"green\" percent={((props.post.matches / props.post.goal) * 100).toFixed(3)} autoSuccess/>\n                </Card.Content>                    \n            </Card>\n        )\n    } else {\n        return (\n            <div>test</div>\n        )\n    }\n}\n\nconst styles = {\n    card: {\n        width: \"100%\",\n    },\n}\n\n{/* <div>\n<h1>MATCH POST</h1>\n{match.content}\n{match.hearts}\n{match.author.first_name}\n{match.author.last_name}\n<img src={match.profile.image} />\n{match.group.name}\n{match.group.description}\n{match.matches}\n{match.goal}\n</div> */}\n\n// {posts.map(post => (\n//     <div>\n//         <h1>REGULAR POST</h1>\n//         {post.content}\n//         {post.hearts}\n//         {post.author.first_name}\n//         {post.author.last_name}\n//         {post.group.name}\n//         {post.group.description}\n//     </div>\n// ))}\n\nexport default FeedCard;\n"]},"metadata":{},"sourceType":"module"}