{"ast":null,"code":"var _jsxFileName = \"/Users/joonyounglee/MITHACK/MITHack2020/client/src/Pages/IndPost.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport NavBar from \"../Components/NavBar\";\nimport ParsePost from \"../APIComponents/ParsePost\";\nimport PostInfo from \"../APIComponents/PostInfo\";\nimport { Grid, Container, Header } from \"semantic-ui-react\";\n\nconst IndPost = props => {\n  const [post, setPost] = useState({});\n  const post_id = props.postID;\n  useEffect(() => {\n    getPost();\n  }, {});\n\n  async function getPost() {\n    let data = await PostInfo(post_id);\n    console.log(data);\n    data = await ParsePost(data);\n    setPost(data);\n  }\n\n  if (post.isMatch) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      centered: true,\n      columns: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: post.group.image,\n      size: \"medium\",\n      wrapped: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      text: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 29\n      }\n    }, \"Match \", post.author.first_name, \"'s action!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 29\n      }\n    }, post.content)))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, \"under construction\");\n  }\n};\n\nexport default IndPost;","map":{"version":3,"sources":["/Users/joonyounglee/MITHACK/MITHack2020/client/src/Pages/IndPost.js"],"names":["React","useState","useEffect","useParams","NavBar","ParsePost","PostInfo","Grid","Container","Header","IndPost","props","post","setPost","post_id","postID","getPost","data","console","log","isMatch","group","image","author","first_name","content"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAAQC,IAAR,EAAcC,SAAd,EAAyBC,MAAzB,QAAsC,mBAAtC;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMa,OAAO,GAAGH,KAAK,CAACI,MAAtB;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeA,OAAf,GAAyB;AACrB,QAAIC,IAAI,GAAG,MAAMX,QAAQ,CAACQ,OAAD,CAAzB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAA,IAAAA,IAAI,GAAG,MAAMZ,SAAS,CAACY,IAAD,CAAtB;AACAJ,IAAAA,OAAO,CAACI,IAAD,CAAP;AACH;;AACD,MAAIL,IAAI,CAACQ,OAAT,EAAkB;AACd,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,IAAD;AAAM,MAAA,QAAQ,MAAd;AAAe,MAAA,OAAO,EAAE,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAER,IAAI,CAACS,KAAL,CAAWC,KAAvB;AAA8B,MAAA,IAAI,EAAG,QAArC;AAA8C,MAAA,OAAO,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,SAAD;AAAW,MAAA,IAAI,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACWV,IAAI,CAACW,MAAL,CAAYC,UADvB,eADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKZ,IAAI,CAACa,OADV,CAJJ,CAFJ,CADJ,CAFJ,CADJ;AAkBH,GAnBD,MAmBO;AACH,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ;AAKH;AAEJ,CA1CD;;AA4CA,eAAef,OAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport NavBar from \"../Components/NavBar\";\nimport ParsePost from \"../APIComponents/ParsePost\";\nimport PostInfo from \"../APIComponents/PostInfo\";\nimport {Grid, Container, Header} from \"semantic-ui-react\";\n\nconst IndPost = (props) => {\n\n    const [post, setPost] = useState({});\n    const post_id = props.postID;\n\n    useEffect(() => {\n        getPost();\n    }, {});\n\n    async function getPost() {\n        let data = await PostInfo(post_id);\n        console.log(data);\n        data = await ParsePost(data);\n        setPost(data);\n    }\n    if (post.isMatch) {\n        return(\n            <div>\n                <NavBar />\n                <Grid centered columns={2}>\n                    <Grid.Column>\n                        <Image src={post.group.image} size = 'medium' wrapped />\n                        <Container text>\n                            <Header as='h1'>\n                                Match {post.author.first_name}'s action!\n                            </Header>\n                            <p>\n                                {post.content}\n                            </p>\n                        </Container>\n                    </Grid.Column>\n                </Grid>\n            </div>\n        )\n    } else {\n        return(\n            <div>\n                under construction\n            </div>\n        )\n    }\n\n}\n\nexport default IndPost;"]},"metadata":{},"sourceType":"module"}