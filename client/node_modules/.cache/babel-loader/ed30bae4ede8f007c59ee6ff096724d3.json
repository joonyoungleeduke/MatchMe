{"ast":null,"code":"import React from \"react\";\nimport GroupInfo from \"../APIComponents/GroupInfo\";\nimport UserInfo from \"../APIComponents/UserInfo\";\nimport ProfileInfo from \"../APIComponents/ProfileInfo\";\nimport AllPostComments from \"../APIComponents/AllPostComments\";\nimport ParseComments from \"../APIComponents/ParseComments\";\n\nasync function ParsePost(post) {\n  console.log(post);\n  post.group = await GroupInfo(post.group);\n  post['user_id'] = post.author;\n  post['profile'] = await ProfileInfo(post.user_id);\n  let comments = await AllPostComments(post.id);\n  post['comments'] = await ParseComments(comments);\n  post.author = await UserInfo(post.user_id);\n  return post;\n}\n\nexport default ParsePost;","map":{"version":3,"sources":["/Users/joonyounglee/MITHACK/MITHack2020/client/src/APIComponents/ParsePost.js"],"names":["React","GroupInfo","UserInfo","ProfileInfo","AllPostComments","ParseComments","ParsePost","post","console","log","group","author","user_id","comments","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;AAEA,eAAeC,SAAf,CAAyBC,IAAzB,EAA+B;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAA,EAAAA,IAAI,CAACG,KAAL,GAAa,MAAMT,SAAS,CAACM,IAAI,CAACG,KAAN,CAA5B;AACAH,EAAAA,IAAI,CAAC,SAAD,CAAJ,GAAkBA,IAAI,CAACI,MAAvB;AACAJ,EAAAA,IAAI,CAAC,SAAD,CAAJ,GAAkB,MAAMJ,WAAW,CAACI,IAAI,CAACK,OAAN,CAAnC;AACA,MAAIC,QAAQ,GAAG,MAAMT,eAAe,CAACG,IAAI,CAACO,EAAN,CAApC;AACAP,EAAAA,IAAI,CAAC,UAAD,CAAJ,GAAmB,MAAMF,aAAa,CAACQ,QAAD,CAAtC;AACAN,EAAAA,IAAI,CAACI,MAAL,GAAc,MAAMT,QAAQ,CAACK,IAAI,CAACK,OAAN,CAA5B;AAEA,SAAOL,IAAP;AACH;;AAED,eAAeD,SAAf","sourcesContent":["import React from \"react\";\nimport GroupInfo from \"../APIComponents/GroupInfo\";\nimport UserInfo from \"../APIComponents/UserInfo\";\nimport ProfileInfo from \"../APIComponents/ProfileInfo\";\nimport AllPostComments from \"../APIComponents/AllPostComments\";\nimport ParseComments from \"../APIComponents/ParseComments\";\n\nasync function ParsePost(post) {\n    console.log(post);\n    post.group = await GroupInfo(post.group);\n    post['user_id'] = post.author; \n    post['profile'] = await ProfileInfo(post.user_id);\n    let comments = await AllPostComments(post.id);\n    post['comments'] = await ParseComments(comments);\n    post.author = await UserInfo(post.user_id);\n\n    return post; \n}\n\nexport default ParsePost;"]},"metadata":{},"sourceType":"module"}