{"ast":null,"code":"var _jsxFileName = \"/Users/joonyounglee/MITHACK/MITHack2020/client/src/Components/Posts.js\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport { render } from \"react-dom\";\nimport axiosInstance from \"../User/axiosApi\";\nimport ParsePosts from \"../APIComponents/ParsePosts\";\n\nfunction Posts() {\n  const [posts, setPosts] = useState([]);\n  const [matches, setMatches] = useState([]);\n  useEffect(() => {\n    postFetch({\n      limit: 10\n    });\n  }, []);\n\n  async function setterPosts(data) {\n    data = await ParsePosts(data);\n    let posts = data.filter(post => post.isMatch === false);\n    let matches = data.filter(post => post.isMatch === true);\n    setPosts(posts);\n    setMatches(matches);\n  }\n\n  async function postFetch(pagination) {\n    try {\n      var limit = pagination.limit;\n      var id = localStorage.getItem(\"user_id\");\n      const response = await axiosInstance.get('api/posts/interests/' + id.toString() + \"/\" + limit.toString() + \"/\");\n      const data = response.data;\n      await setterPosts(data);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, matches.map(match =>\n  /*#__PURE__*/\n  // group.name, group.description, group.image, group.theme\n  React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, \"MATCH POST\"), match.content, match.hearts, match.author.first_name, match.author.last_name, /*#__PURE__*/React.createElement(\"img\", {\n    src: match.profile.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }), match.group.name, match.group.description, match.matches, match.goal)), posts.map(post => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, \"REGULAR POST\"), post.content, post.hearts, post.author.first_name, post.author.last_name, post.group.name, post.group.description)));\n}\n\nexport default Posts;","map":{"version":3,"sources":["/Users/joonyounglee/MITHACK/MITHack2020/client/src/Components/Posts.js"],"names":["React","Component","useState","useEffect","render","axiosInstance","ParsePosts","Posts","posts","setPosts","matches","setMatches","postFetch","limit","setterPosts","data","filter","post","isMatch","pagination","id","localStorage","getItem","response","get","toString","error","console","log","map","match","content","hearts","author","first_name","last_name","profile","image","group","name","description","goal"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { render } from \"react-dom\";\nimport axiosInstance from \"../User/axiosApi\";\nimport ParsePosts from \"../APIComponents/ParsePosts\";\n\n\nfunction Posts() {\n    const [posts, setPosts] = useState([]);\n    const [matches, setMatches] = useState([]); \n\n    useEffect(() => {\n        postFetch({ limit:10 });\n    }, []);    \n\n    async function setterPosts(data) {\n        data = await ParsePosts(data);\n\n        let posts = data.filter(post => post.isMatch === false);\n        let matches = data.filter(post => post.isMatch === true);\n\n        setPosts(posts);\n        setMatches(matches);\n    }\n\n    async function postFetch(pagination) {\n        try {\n            var limit = pagination.limit; \n            var id = localStorage.getItem(\"user_id\");\n            const response = await axiosInstance.get('api/posts/interests/' + id.toString() + \"/\" + limit.toString() + \"/\");\n            \n            const data = response.data;\n\n            await setterPosts(data);\n\n            return response.data; \n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    return (\n        <div>\n            {/* <InfiniteScroll\n                pageStart = {0}\n                loadMore = {() => postFetch({ limit: posts.length + matches.length + 10 })}\n                hasMore = {true || false}\n                useWindow = {false}\n                loader = {\n                    <div key=\"loading\" className=\"loader\">\n                        Loading...\n                    </div>\n                }\n            >  */}\n                {matches.map(match => ( // group.name, group.description, group.image, group.theme\n                    <div>\n                        <h1>MATCH POST</h1>\n                        {match.content}\n                        {match.hearts}\n                        {match.author.first_name}\n                        {match.author.last_name}\n                        <img src={match.profile.image} />\n                        {match.group.name}\n                        {match.group.description}\n                        {match.matches}\n                        {match.goal}\n                    </div>\n                ))\n\n                }\n                {posts.map(post => (\n                    <div>\n                        <h1>REGULAR POST</h1>\n                        {post.content}\n                        {post.hearts}\n                        {post.author.first_name}\n                        {post.author.last_name}\n                        {post.group.name}\n                        {post.group.description}\n                    </div>\n                ))}\n            {/* </InfiniteScroll> */}\n        </div>\n    );\n\n}\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}