{"ast":null,"code":"import React from \"react\";\nimport axiosInstance from \"../User/axiosApi\";\nimport AllGroups from \"../APIComponents/AllGroups\";\nimport AllUsers from \"../APIComponents/AllUsers\";\nimport AllProfiles from \"../APIComponents/AllProfiles\";\nimport UserGroups from \"../APIComponents/UserGroups\";\n\nfunction SearchResults(user_id) {\n  // this provides all the search results for the search bar \n  async function SearchResults(user_id) {\n    let groups = await AllGroups(); // for now search results are just other groups and users \n\n    let users = await AllUsers();\n    let profiles = await AllProfiles();\n    let results = Array();\n    let idx;\n    let obj;\n\n    for (idx in groups) {\n      obj = {\n        \"title\": group[idx].name,\n        \"description\": group[idx].description,\n        \"image\": group[idx].image,\n        \"theme\": group[idx].theme\n      };\n      results.push(obj);\n    }\n\n    for (idx in users) {\n      obj = {\n        \"title\": users[idx].first_name + \" \" + users[idx].last_name,\n        \"description\": profiles[idx].bio,\n        \"image\": profiles[idx].image,\n        \"total_matches\": profiles[idx].total_matches\n      };\n      results.push(obj);\n    }\n\n    return results;\n  }\n\n  ;\n  let results = searchResults(user_id);\n  results.then(result => {\n    return result;\n  });\n}\n\nexport default SearchResults; // const SuggestedGroups = (props) => {\n//     return(\n//         <Card>\n//             <Card.Content header='Suggested Groups' />\n//             <Card.Content extra>\n//               <div class=\"ui middle aligned selection list\">\n//                 {props.groups.map(group => (\n//                   <div class=\"item\">\n//                     <img class=\"ui avatar image\" src={group.image}/>\n//                     <div class=\"content\">\n//                 <div class=\"header\">{group.name}</div>\n//                     </div>\n//                   </div>\n//                 ))}\n//               </div>\n//             </Card.Content>\n//         </Card>\n//     );\n// }","map":{"version":3,"sources":["/Users/joonyounglee/MITHACK/MITHack2020/client/src/APIComponents/SearchResults.js"],"names":["React","axiosInstance","AllGroups","AllUsers","AllProfiles","UserGroups","SearchResults","user_id","groups","users","profiles","results","Array","idx","obj","group","name","description","image","theme","push","first_name","last_name","bio","total_matches","searchResults","then","result"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;;AAEA,SAASC,aAAT,CAAuBC,OAAvB,EAAgC;AAAE;AAC9B,iBAAeD,aAAf,CAA6BC,OAA7B,EAAsC;AAClC,QAAIC,MAAM,GAAG,MAAMN,SAAS,EAA5B,CADkC,CACF;;AAChC,QAAIO,KAAK,GAAG,MAAMN,QAAQ,EAA1B;AACA,QAAIO,QAAQ,GAAG,MAAMN,WAAW,EAAhC;AAEA,QAAIO,OAAO,GAAGC,KAAK,EAAnB;AACA,QAAIC,GAAJ;AACA,QAAIC,GAAJ;;AAEA,SAAKD,GAAL,IAAYL,MAAZ,EAAoB;AAChBM,MAAAA,GAAG,GAAG;AACF,iBAASC,KAAK,CAACF,GAAD,CAAL,CAAWG,IADlB;AAEF,uBAAeD,KAAK,CAACF,GAAD,CAAL,CAAWI,WAFxB;AAGF,iBAASF,KAAK,CAACF,GAAD,CAAL,CAAWK,KAHlB;AAIF,iBAASH,KAAK,CAACF,GAAD,CAAL,CAAWM;AAJlB,OAAN;AAMAR,MAAAA,OAAO,CAACS,IAAR,CAAaN,GAAb;AACH;;AAED,SAAKD,GAAL,IAAYJ,KAAZ,EAAmB;AACfK,MAAAA,GAAG,GAAG;AACF,iBAASL,KAAK,CAACI,GAAD,CAAL,CAAWQ,UAAX,GAAwB,GAAxB,GAA8BZ,KAAK,CAACI,GAAD,CAAL,CAAWS,SADhD;AAEF,uBAAeZ,QAAQ,CAACG,GAAD,CAAR,CAAcU,GAF3B;AAGF,iBAASb,QAAQ,CAACG,GAAD,CAAR,CAAcK,KAHrB;AAIF,yBAAiBR,QAAQ,CAACG,GAAD,CAAR,CAAcW;AAJ7B,OAAN;AAMAb,MAAAA,OAAO,CAACS,IAAR,CAAaN,GAAb;AACH;;AAED,WAAOH,OAAP;AAEH;;AAAA;AAED,MAAIA,OAAO,GAAGc,aAAa,CAAClB,OAAD,CAA3B;AAEAI,EAAAA,OAAO,CAACe,IAAR,CAAcC,MAAD,IAAY;AACrB,WAAOA,MAAP;AACH,GAFD;AAGH;;AAGD,eAAerB,aAAf,C,CAGI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport axiosInstance from \"../User/axiosApi\";\nimport AllGroups from \"../APIComponents/AllGroups\";\nimport AllUsers from \"../APIComponents/AllUsers\";\nimport AllProfiles from \"../APIComponents/AllProfiles\";\nimport UserGroups from \"../APIComponents/UserGroups\";\n\nfunction SearchResults(user_id) { // this provides all the search results for the search bar \n    async function SearchResults(user_id) {\n        let groups = await AllGroups(); // for now search results are just other groups and users \n        let users = await AllUsers();\n        let profiles = await AllProfiles(); \n        \n        let results = Array();\n        let idx; \n        let obj; \n        \n        for (idx in groups) {\n            obj = {\n                \"title\": group[idx].name,\n                \"description\": group[idx].description, \n                \"image\": group[idx].image, \n                \"theme\": group[idx].theme,\n            }\n            results.push(obj);\n        }\n\n        for (idx in users) {\n            obj = {\n                \"title\": users[idx].first_name + \" \" + users[idx].last_name,\n                \"description\": profiles[idx].bio,\n                \"image\": profiles[idx].image, \n                \"total_matches\": profiles[idx].total_matches, \n            }\n            results.push(obj);\n        }\n\n        return results; \n\n    };\n\n    let results = searchResults(user_id);\n\n    results.then((result) => {\n        return result; \n    })\n}\n\n\nexport default SearchResults;\n\n\n    // const SuggestedGroups = (props) => {\n    //     return(\n    //         <Card>\n    //             <Card.Content header='Suggested Groups' />\n    //             <Card.Content extra>\n    //               <div class=\"ui middle aligned selection list\">\n    //                 {props.groups.map(group => (\n    //                   <div class=\"item\">\n    //                     <img class=\"ui avatar image\" src={group.image}/>\n    //                     <div class=\"content\">\n    //                 <div class=\"header\">{group.name}</div>\n    //                     </div>\n    //                   </div>\n    //                 ))}\n    //               </div>\n    //             </Card.Content>\n    //         </Card>\n    //     );\n    // }\n    "]},"metadata":{},"sourceType":"module"}