{"ast":null,"code":"var _jsxFileName = \"/Users/joonyounglee/MITHACK/MITHack2020/client/src/Pages/Home.js\";\nimport React, { useState, useEffect } from 'react';\nimport FeedCard from \"../Components/FeedCard\";\nimport NavBar from \"../Components/NavBar\";\nimport { Card, Icon, Grid, Segment } from 'semantic-ui-react';\nimport GroupsCard from \"../Components/GroupsCard\";\nimport ProfileCard from \"../Components/ProfileCard\";\nimport NewPost from \"../Components/NewPost\";\nimport SuggestedGroups from '../Components/SuggestedGroups';\nimport { Modal, Button, Nav } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport GroupPosts from \"../APIComponents/GroupPosts\";\nimport UserGroups from \"../APIComponents/UserGroups\";\nimport UserInfo from \"../APIComponents/UserInfo\";\nimport ProfileInfo from \"../APIComponents/ProfileInfo\";\nimport GroupSuggestions from \"../APIComponents/GroupSuggestions\";\nconst description = ['Amy is a violinist with 2 years experience in the wedding industry.', 'She enjoys the outdoors and currently resides in upstate New York.'].join(' ');\n\nfunction postReducer(state, action) {\n  switch (action.type) {\n    case 'OPEN_MODAL':\n      return {\n        showpost: true,\n        dimmer: action.dimmer\n      };\n\n    case 'CLOSE_MODAL':\n      return {\n        showpost: false\n      };\n\n    default:\n      throw new Error();\n  }\n}\n\nconst Home = props => {\n  const [state, handlePost] = React.useReducer(postReducer, {\n    showpost: false,\n    dimmer: undefined\n  });\n\n  function handlePostChange(state) {\n    handlePost(state);\n  }\n\n  const [user, setUser] = useState({});\n  const [profile, setProfile] = useState({});\n  const [groups, setGroups] = useState([]);\n  const [suggestions, setSuggestions] = useState([]); // group suggestions \n\n  const [posts, setPosts] = useState([]);\n  const user_id = localStorage.getItem('user_id');\n  useEffect(() => {\n    getPosts(user_id);\n    getUser(user_id);\n    getProfile(user_id);\n    getSuggestions(user_id);\n  }, {});\n\n  async function getSuggestions(user_id) {\n    let suggestions = GroupSuggestions(user_id);\n    suggestions.then(data => {\n      setSuggestions(data);\n    });\n  }\n\n  async function getPosts(user_id) {\n    await getGroups(user_id);\n    let arr = Array();\n\n    for (let idx in groups) {\n      let group = groups[idx];\n      let data = await GroupPosts(group.id);\n      data.then(info => {\n        arr.push(info);\n      });\n    }\n\n    setPosts(arr);\n  }\n\n  async function getGroups(user_id) {\n    let groups = UserGroups(user_id);\n    groups.then(data => {\n      setGroups(data);\n    });\n  }\n\n  async function getUser(user_id) {\n    let user = UserInfo(user_id);\n    user.then(data => {\n      setUser(data);\n    });\n  }\n\n  ;\n\n  async function getProfile(user_id) {\n    let profile = ProfileInfo(user_id);\n    profile.then(data => {\n      setProfile(data);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(LinkContainer, {\n    to: \"/profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ProfileCard, {\n    className: \"profCard\",\n    name: user.first_name + \" \" + user.last_name,\n    src: profile.image,\n    inspired: profile.total_matches,\n    matched: profile.ind_matches,\n    groups: groups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 23\n    }\n  })))), /*#__PURE__*/React.createElement(Segment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(GroupsCard, {\n    name: props.name,\n    src: props.src,\n    inspired: props.inspired,\n    matched: props.matched,\n    groups: groups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Grid.Column, {\n    centered: true,\n    width: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(NewPost, {\n    profile: profile,\n    state: state,\n    handlePostChange: handlePostChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FeedCard, {\n    description: description,\n    likes: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(SuggestedGroups, {\n    groups: suggestions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  })))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/joonyounglee/MITHACK/MITHack2020/client/src/Pages/Home.js"],"names":["React","useState","useEffect","FeedCard","NavBar","Card","Icon","Grid","Segment","GroupsCard","ProfileCard","NewPost","SuggestedGroups","Modal","Button","Nav","LinkContainer","GroupPosts","UserGroups","UserInfo","ProfileInfo","GroupSuggestions","description","join","postReducer","state","action","type","showpost","dimmer","Error","Home","props","handlePost","useReducer","undefined","handlePostChange","user","setUser","profile","setProfile","groups","setGroups","suggestions","setSuggestions","posts","setPosts","user_id","localStorage","getItem","getPosts","getUser","getProfile","getSuggestions","then","data","getGroups","arr","Array","idx","group","id","info","push","first_name","last_name","image","total_matches","ind_matches","name","src","inspired","matched"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport FeedCard from \"../Components/FeedCard\";\nimport NavBar from \"../Components/NavBar\";\nimport { Card, Icon, Grid, Segment} from 'semantic-ui-react'\nimport GroupsCard from \"../Components/GroupsCard\";\nimport ProfileCard from \"../Components/ProfileCard\"\nimport NewPost from \"../Components/NewPost\";\nimport SuggestedGroups from '../Components/SuggestedGroups';\nimport {Modal, Button, Nav} from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport GroupPosts from \"../APIComponents/GroupPosts\";\nimport UserGroups from \"../APIComponents/UserGroups\";\nimport UserInfo from \"../APIComponents/UserInfo\";\nimport ProfileInfo from \"../APIComponents/ProfileInfo\";\nimport GroupSuggestions from \"../APIComponents/GroupSuggestions\";\n\n\nconst description = [\n  'Amy is a violinist with 2 years experience in the wedding industry.',\n  'She enjoys the outdoors and currently resides in upstate New York.',\n].join(' ')\n\nfunction postReducer(state, action) {\n  switch (action.type) {\n    case 'OPEN_MODAL' :\n      return { showpost: true, dimmer: action.dimmer }\n    case 'CLOSE_MODAL' : \n      return { showpost: false }\n    default: \n      throw new Error(); \n  }\n}\n\n\nconst Home = (props) => {\n\n  const [state, handlePost] = React.useReducer(postReducer, {\n    showpost: false, \n    dimmer: undefined,\n  })\n\n  function handlePostChange(state) {\n    handlePost(state);\n  }\n\n  const [user, setUser] = useState({});\n  const [profile, setProfile] = useState({});\n  const [groups, setGroups] = useState([]);\n  const [suggestions, setSuggestions] = useState([]); // group suggestions \n  const [posts, setPosts] = useState([]);\n\n  const user_id = localStorage.getItem('user_id');\n\n\n  useEffect(() => {\n      getPosts(user_id);\n      getUser(user_id);\n      getProfile(user_id);\n      getSuggestions(user_id);\n  }, {});\n\n  async function getSuggestions(user_id) {\n    let suggestions = GroupSuggestions(user_id);\n    suggestions.then(data => {\n      setSuggestions(data);\n    })\n\n  }\n\n  async function getPosts(user_id) {\n    await getGroups(user_id);\n\n    let arr = Array(); \n\n    for (let idx in groups) {\n      let group = groups[idx];\n\n      let data = await GroupPosts(group.id);\n      data.then(info => {\n        arr.push(info);\n      })\n    }\n\n    setPosts(arr);\n  }\n\n  async function getGroups(user_id) {\n    let groups = UserGroups(user_id);\n    groups.then(data => {\n      setGroups(data);\n    })\n  }\n\n  async function getUser(user_id) {\n    let user = UserInfo(user_id);\n\n    user.then(data => {\n      setUser(data);\n    })\n  };\n\n  async function getProfile(user_id) {\n    let profile = ProfileInfo(user_id);\n\n    profile.then(data => {\n      setProfile(data);\n    })\n  }\n\n    return (\n      <div>\n          <NavBar />\n\n          <Grid centered>\n            <Grid.Row>\n                <Grid.Column width={2} >\n                  <Segment>\n\n                  <LinkContainer to=\"/profile\">\n                    <Nav.Link >\n\n                      <ProfileCard className=\"profCard\" name={user.first_name + \" \" + user.last_name} src={profile.image} \n                      inspired={profile.total_matches} matched={profile.ind_matches} \n                      groups={groups} />\n\n                    </Nav.Link>\n\n                    </LinkContainer>\n\n                  </Segment>\n\n                  <Segment>\n\n                    <GroupsCard name={props.name} src={props.src} inspired={props.inspired} matched={props.matched} groups={groups}/>\n\n                  </Segment>\n\n                </Grid.Column>\n\n\n\n                  <Grid.Column centered width={3}>\n\n                    <NewPost profile = {profile} state={ state } handlePostChange={handlePostChange} />\n\n\n\n                    <FeedCard description={description} likes={8}/>\n\n                  </Grid.Column>\n\n\n                  <Grid.Column width={2}>\n\n                    <SuggestedGroups groups={suggestions}/>\n\n                  </Grid.Column>\n\n              </Grid.Row>\n\n          </Grid>\n\n      </div>\n\n    );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}