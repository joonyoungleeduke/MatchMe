{"ast":null,"code":"var _jsxFileName = \"/Users/joonyounglee/MITHACK/MITHack2020/client/src/Pages/IndProfile.js\";\nimport React, { Component } from 'react';\nimport NavBar from \"../Components/NavBar\";\nimport axiosInstance from \"../User/axiosApi\";\nimport { Grid, Modal, Button } from 'semantic-ui-react';\nimport UserGroups from \"../APIComponents/UserGroups\";\nimport ProfileInfo from \"../APIComponents/ProfileInfo\";\nimport UserInfo from \"../APIComponents/UserInfo\";\nimport UserPosts from \"../APIComponents/UserPosts\";\nimport ParsePosts from \"../APIComponents/ParsePosts\";\nimport UserComments from \"../APIComponents/UserComments\";\nimport ParseComments from \"../APIComponents/ParseComments\";\nimport FeedCard from \"../Components/FeedCard\";\nimport BigProfileCard from \"../Components/BigProfileCard\";\nimport GroupsCard from \"../Components/GroupsCard\"; // actions inspired, actions matched \n// image \n// groups -> group images\n// user posts / comments  \n// function postReducer(state, action) {\n//   switch (action.type) {\n//     case 'OPEN_MODAL' :\n//       return { showpost: true, dimmer: action.dimmer }\n//     case 'CLOSE_MODAL' : \n//       return { showpost: false }\n//     default: \n//       throw new Error(); \n//   }\n// }\n\nclass IndProfile extends Component {\n  constructor() {\n    super();\n    this.handleLogout = this.handleLogout.bind(this);\n    this.state = {\n      groups: [],\n      // group. name, description, image \n      user: {},\n      // user.first_name, user.last_name\n      profile: {},\n      // profile. bio, image, ind_matches, total_matches \n      posts: [],\n      // post. content, group, author, hearts, matches, isMatch, goal\n      comments: [] // comment. content, post \n\n    };\n  }\n\n  componentDidMount() {\n    const user_id = this.props.user_id; // const state = React.useReducer(postReducer, {\n    //   showpost: false, \n    //   dimmer: undefined,\n    // });\n    // const match_state = React.useReducer(postReducer, {\n    //   showpost: false, \n    //   dimmer: undefined, \n    // });\n\n    this.setPosts(user_id);\n    this.setUser(user_id); // can likely replace some of these with functional progr. // no time \n\n    this.setGroups(user_id);\n    this.setProfile(user_id);\n    this.setComments(user_id);\n  }\n\n  async setPosts(user_id) {\n    let posts = await UserPosts(user_id);\n    posts = ParsePosts(posts);\n    let obj = this.state;\n    posts.then(data => {\n      obj.posts = data;\n      this.setState(obj);\n    });\n  }\n\n  async setUser(user_id) {\n    let user = UserInfo(user_id);\n    let obj = this.state;\n    user.then(data => {\n      obj.user = data;\n      this.setState(obj);\n    });\n  }\n\n  async setGroups(user_id) {\n    let groups = UserGroups(user_id);\n    let obj = this.state;\n    groups.then(data => {\n      obj.groups = data;\n      this.setState(obj);\n    });\n  }\n\n  async setProfile(user_id) {\n    let profile = ProfileInfo(user_id);\n    let obj = this.state;\n    profile.then(data => {\n      obj.profile = data;\n      this.setState(obj);\n    });\n  }\n\n  async setComments(user_id) {\n    let comments = await UserComments(user_id);\n    comments = ParseComments(comments);\n    let obj = this.state;\n    comments.then(data => {\n      obj.comments = data;\n      this.setState(obj);\n    });\n  }\n\n  async handleLogout() {\n    try {\n      const response = await axiosInstance.post('/blacklist/', {\n        \"refresh_token\": localStorage.getItem(\"refresh_token\")\n      });\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      axiosInstance.defaults.headers['Authorization'] = null;\n      return response;\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      centered: true,\n      width: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: 15,\n        fontSize: 30,\n        marginBottom: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, \"Recent Activity\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginRight: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, this.state.posts.map(post => /*#__PURE__*/React.createElement(FeedCard, {\n      isMatch: post.isMatch,\n      post: post,\n      img: this.state.profile.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BigProfileCard, {\n      className: \"profCard\",\n      first_name: this.state.user.first_name,\n      last_name: this.state.user.last_name,\n      src: this.state.profile.image,\n      inspired: this.state.profile.total_matches,\n      matched: this.state.profile.ind_matches,\n      groups: this.state.groups,\n      bio: this.state.profile.bio,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(GroupsCard, {\n      header: \"Groups\",\n      groups: this.state.groups,\n      img: this.state.profile.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 19\n      }\n    })))));\n  }\n\n}\n\nexport default IndProfile;","map":{"version":3,"sources":["/Users/joonyounglee/MITHACK/MITHack2020/client/src/Pages/IndProfile.js"],"names":["React","Component","NavBar","axiosInstance","Grid","Modal","Button","UserGroups","ProfileInfo","UserInfo","UserPosts","ParsePosts","UserComments","ParseComments","FeedCard","BigProfileCard","GroupsCard","IndProfile","constructor","handleLogout","bind","state","groups","user","profile","posts","comments","componentDidMount","user_id","props","setPosts","setUser","setGroups","setProfile","setComments","obj","then","data","setState","response","post","localStorage","getItem","removeItem","defaults","headers","e","console","log","render","marginLeft","fontSize","marginBottom","marginRight","map","isMatch","image","first_name","last_name","total_matches","ind_matches","bio"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport NavBar from \"../Components/NavBar\";\nimport axiosInstance from \"../User/axiosApi\";\nimport {Grid, Modal, Button} from 'semantic-ui-react'\nimport UserGroups from \"../APIComponents/UserGroups\";\nimport ProfileInfo from \"../APIComponents/ProfileInfo\";\nimport UserInfo from \"../APIComponents/UserInfo\";\nimport UserPosts from \"../APIComponents/UserPosts\";\nimport ParsePosts from \"../APIComponents/ParsePosts\";\nimport UserComments from \"../APIComponents/UserComments\";\nimport ParseComments from \"../APIComponents/ParseComments\";\nimport FeedCard from \"../Components/FeedCard\";\nimport BigProfileCard from \"../Components/BigProfileCard\";\nimport GroupsCard from \"../Components/GroupsCard\";\n\n// actions inspired, actions matched \n// image \n// groups -> group images\n// user posts / comments  \n\n// function postReducer(state, action) {\n//   switch (action.type) {\n//     case 'OPEN_MODAL' :\n//       return { showpost: true, dimmer: action.dimmer }\n//     case 'CLOSE_MODAL' : \n//       return { showpost: false }\n//     default: \n//       throw new Error(); \n//   }\n// }\n\n\nclass IndProfile extends Component {\n  constructor() {\n    super();\n    this.handleLogout = this.handleLogout.bind(this);\n    this.state = {\n      groups: [], // group. name, description, image \n      user: {}, // user.first_name, user.last_name\n      profile: {}, // profile. bio, image, ind_matches, total_matches \n      posts: [], // post. content, group, author, hearts, matches, isMatch, goal\n      comments: [], // comment. content, post \n    };\n  }\n\n  componentDidMount() {\n    const user_id = this.props.user_id;\n    // const state = React.useReducer(postReducer, {\n    //   showpost: false, \n    //   dimmer: undefined,\n    // });\n    // const match_state = React.useReducer(postReducer, {\n    //   showpost: false, \n    //   dimmer: undefined, \n    // });\n\n    this.setPosts(user_id);\n    this.setUser(user_id); // can likely replace some of these with functional progr. // no time \n    this.setGroups(user_id);\n    this.setProfile(user_id); \n    this.setComments(user_id);\n  }\n\n  async setPosts(user_id) {\n    let posts = await UserPosts(user_id);\n    posts = ParsePosts(posts);\n\n    let obj = this.state \n\n    posts.then(data => {\n      obj.posts = data; \n      this.setState(obj); \n    })\n  };\n\n  async setUser(user_id) {\n    let user = UserInfo(user_id);\n\n    let obj = this.state; \n\n    user.then(data => {\n      obj.user = data; \n      this.setState(obj);\n    })\n  };\n\n  async setGroups(user_id) {\n    let groups = UserGroups(user_id);\n\n    let obj = this.state; \n\n    groups.then(data => {\n      obj.groups = data; \n      this.setState(obj);\n    })\n  }\n\n  async setProfile(user_id) {\n    let profile = ProfileInfo(user_id);\n\n    let obj = this.state; \n\n    profile.then(data => {\n      obj.profile = data; \n      this.setState(obj);\n    })\n  }\n\n  async setComments(user_id) {\n    let comments = await UserComments(user_id);\n    comments = ParseComments(comments);\n\n    let obj = this.state; \n\n    comments.then(data => {\n      obj.comments = data; \n      this.setState(obj);\n    })\n  }\n\n\n  async handleLogout() {\n      try {\n          const response = await axiosInstance.post('/blacklist/', {\n              \"refresh_token\": localStorage.getItem(\"refresh_token\")\n          });\n          localStorage.removeItem('access_token');\n          localStorage.removeItem('refresh_token');\n          axiosInstance.defaults.headers['Authorization'] = null;\n          return response;\n      }\n      catch (e) {\n          console.log(e);\n      }\n  };\n\n\n\n  render (){\n    return (\n      <div>\n        <NavBar />\n        <Grid centered >\n            <Grid.Row>\n                <Grid.Column centered width={9}>\n                <div style={{marginLeft: 15, fontSize: 30, marginBottom:20}}>\n                Recent Activity\n                </div>\n                <div style={{marginRight: 20}}>\n                    {this.state.posts.map(post => (\n                        <FeedCard isMatch={post.isMatch} post={post} img={this.state.profile.image} />\n                    ))}\n                     {/* {this.state.comments.map(comment => (\n                    <div>\n                      <h1>COMMENT</h1>\n                      {comment.content}\n                      {comment.post.author.first_name}\n                    </div>\n                    ))} */}\n                </div>\n                </Grid.Column>\n\n                <Grid.Column width={4}>\n              <BigProfileCard className=\"profCard\" first_name={this.state.user.first_name} last_name={this.state.user.last_name} src={this.state.profile.image} \n              inspired={this.state.profile.total_matches} matched={this.state.profile.ind_matches} \n              groups={this.state.groups} bio={this.state.profile.bio}/>\n                 \n                  <GroupsCard header=\"Groups\" groups={this.state.groups} img={this.state.profile.image} />\n                </Grid.Column>\n\n            </Grid.Row>\n\n        </Grid>\n       \n      </div>\n\n    );\n  }\n}\n\nexport default IndProfile;\n"]},"metadata":{},"sourceType":"module"}