{"ast":null,"code":"import React from \"react\";\nimport GroupInfo from \"../APIComponents/GroupInfo\";\nimport UserInfo from \"../APIComponents/UserInfo\";\nimport ProfileInfo from \"../APIComponents/ProfileInfo\";\nimport AllPostComments from \"../APIComponents/AllPostComments\";\nimport ParseComments from \"../APIComponents/ParseComments\";\n\nasync function ParsePosts(data, user_id) {\n  for (let idx in data) {\n    if (post.isMatch) {\n      post['matched'] = await CheckMatch(data[idx].id, user_id);\n    }\n\n    post['hearted'] = await CheckHeart(data[idx].id, user_id);\n    data[idx].group = await GroupInfo(data[idx].group);\n    data[idx]['user_id'] = data[idx].author;\n    data[idx]['profile'] = await ProfileInfo(data[idx].user_id);\n    let comments = await AllPostComments(data[idx].id);\n    data[idx]['comments'] = await ParseComments(comments);\n    data[idx].author = await UserInfo(data[idx].user_id);\n  }\n\n  return data;\n}\n\nexport default ParsePosts;","map":{"version":3,"sources":["/Users/joonyounglee/MITHACK/MITHack2020/client/src/APIComponents/ParsePosts.js"],"names":["React","GroupInfo","UserInfo","ProfileInfo","AllPostComments","ParseComments","ParsePosts","data","user_id","idx","post","isMatch","CheckMatch","id","CheckHeart","group","author","comments"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;AAEA,eAAeC,UAAf,CAA0BC,IAA1B,EAAgCC,OAAhC,EAAyC;AACrC,OAAK,IAAIC,GAAT,IAAgBF,IAAhB,EAAsB;AAElB,QAAIG,IAAI,CAACC,OAAT,EAAkB;AACdD,MAAAA,IAAI,CAAC,SAAD,CAAJ,GAAkB,MAAME,UAAU,CAACL,IAAI,CAACE,GAAD,CAAJ,CAAUI,EAAX,EAAeL,OAAf,CAAlC;AACH;;AAEDE,IAAAA,IAAI,CAAC,SAAD,CAAJ,GAAkB,MAAMI,UAAU,CAACP,IAAI,CAACE,GAAD,CAAJ,CAAUI,EAAX,EAAeL,OAAf,CAAlC;AAEAD,IAAAA,IAAI,CAACE,GAAD,CAAJ,CAAUM,KAAV,GAAkB,MAAMd,SAAS,CAACM,IAAI,CAACE,GAAD,CAAJ,CAAUM,KAAX,CAAjC;AACAR,IAAAA,IAAI,CAACE,GAAD,CAAJ,CAAU,SAAV,IAAuBF,IAAI,CAACE,GAAD,CAAJ,CAAUO,MAAjC;AACAT,IAAAA,IAAI,CAACE,GAAD,CAAJ,CAAU,SAAV,IAAuB,MAAMN,WAAW,CAACI,IAAI,CAACE,GAAD,CAAJ,CAAUD,OAAX,CAAxC;AACA,QAAIS,QAAQ,GAAG,MAAMb,eAAe,CAACG,IAAI,CAACE,GAAD,CAAJ,CAAUI,EAAX,CAApC;AACAN,IAAAA,IAAI,CAACE,GAAD,CAAJ,CAAU,UAAV,IAAwB,MAAMJ,aAAa,CAACY,QAAD,CAA3C;AACAV,IAAAA,IAAI,CAACE,GAAD,CAAJ,CAAUO,MAAV,GAAmB,MAAMd,QAAQ,CAACK,IAAI,CAACE,GAAD,CAAJ,CAAUD,OAAX,CAAjC;AACH;;AAED,SAAOD,IAAP;AACH;;AAED,eAAeD,UAAf","sourcesContent":["import React from \"react\";\nimport GroupInfo from \"../APIComponents/GroupInfo\";\nimport UserInfo from \"../APIComponents/UserInfo\";\nimport ProfileInfo from \"../APIComponents/ProfileInfo\";\nimport AllPostComments from \"../APIComponents/AllPostComments\";\nimport ParseComments from \"../APIComponents/ParseComments\";\n\nasync function ParsePosts(data, user_id) {\n    for (let idx in data) {\n\n        if (post.isMatch) {\n            post['matched'] = await CheckMatch(data[idx].id, user_id);\n        }\n    \n        post['hearted'] = await CheckHeart(data[idx].id, user_id); \n\n        data[idx].group = await GroupInfo(data[idx].group);\n        data[idx]['user_id'] = data[idx].author; \n        data[idx]['profile'] = await ProfileInfo(data[idx].user_id);\n        let comments = await AllPostComments(data[idx].id);\n        data[idx]['comments'] = await ParseComments(comments);\n        data[idx].author = await UserInfo(data[idx].user_id);\n    }\n\n    return data; \n}\n\nexport default ParsePosts;"]},"metadata":{},"sourceType":"module"}