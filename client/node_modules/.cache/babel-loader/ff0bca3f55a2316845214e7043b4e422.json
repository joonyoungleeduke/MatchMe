{"ast":null,"code":"var _jsxFileName = \"/Users/joonyounglee/MITHACK/MITHack2020/client/src/Pages/Profile.js\";\nimport React, { Component } from 'react';\nimport NavBar from \"../Components/NavBar\";\nimport axiosInstance from \"../User/axiosApi\";\nimport { Icon, Button, Card, Grid } from 'semantic-ui-react';\nimport { BsFillLightningFill } from \"react-icons/bs\";\nimport { FaHandsHelping } from \"react-icons/fa\";\nimport * as Color from \"../Components/Color\";\nimport UserGroups from \"../APIComponents/UserGroups\";\nimport ProfileInfo from \"../APIComponents/ProfileInfo\";\nimport UserInfo from \"../APIComponents/UserInfo\";\nimport UserPosts from \"../APIComponents/UserPosts\";\nimport ParsePosts from \"../APIComponents/ParsePosts\";\nimport UserComments from \"../APIComponents/UserComments\";\nimport ParseComments from \"../APIComponents/ParseComments\";\nimport NewPost from \"../Components/NewPost\";\nimport BigProfileCard from \"../Components/BigProfileCard\";\nimport GroupsCard from \"../Components/GroupsCard\";\nconst description = ['I am a violinist with 2 years of experience in the wedding industry.', 'I enjoy the outdoors and currently reside in upstate New York.'].join(' '); // actions inspired, actions matched \n// image \n// groups -> group images\n// user posts / comments  \n\nfunction postReducer(state, action) {\n  switch (action.type) {\n    case 'OPEN_MODAL':\n      return {\n        showpost: true,\n        dimmer: action.dimmer\n      };\n\n    case 'CLOSE_MODAL':\n      return {\n        showpost: false\n      };\n\n    default:\n      throw new Error();\n  }\n}\n\nclass Profile extends Component {\n  constructor() {\n    super();\n    this.handleLogout = this.handleLogout.bind(this);\n    this.state = {\n      groups: [],\n      // group. name, description, image \n      user: {},\n      // user.first_name, user.last_name\n      profile: {},\n      // profile. bio, image, ind_matches, total_matches \n      posts: [],\n      // post. content, group, author, hearts, matches, isMatch, goal\n      comments: [] // comment. content, post \n\n    };\n  }\n\n  componentDidMount() {\n    const user_id = localStorage.getItem('user_id');\n    this.setPosts(user_id);\n    this.setUser(user_id); // can likely replace some of these with functional progr. // no time \n\n    this.setGroups(user_id);\n    this.setProfile(user_id);\n    this.setComments(user_id);\n  }\n\n  async setPosts(user_id) {\n    let posts = await UserPosts(user_id);\n    posts = ParsePosts(posts);\n    let obj = this.state;\n    posts.then(data => {\n      obj.posts = data;\n      this.setState(obj);\n    });\n  }\n\n  async setUser(user_id) {\n    let user = UserInfo(user_id);\n    let obj = this.state;\n    user.then(data => {\n      obj.user = data;\n      this.setState(obj);\n    });\n  }\n\n  async setGroups(user_id) {\n    let groups = UserGroups(user_id);\n    let obj = this.state;\n    groups.then(data => {\n      obj.groups = data;\n      this.setState(obj);\n    });\n  }\n\n  async setProfile(user_id) {\n    let profile = ProfileInfo(user_id);\n    let obj = this.state;\n    profile.then(data => {\n      obj.profile = data;\n      this.setState(obj);\n    });\n  }\n\n  async setComments(user_id) {\n    let comments = await UserComments(user_id);\n    comments = ParseComments(comments);\n    let obj = this.state;\n    comments.then(data => {\n      obj.comments = data;\n      this.setState(obj);\n    });\n  }\n\n  async handleLogout() {\n    try {\n      const response = await axiosInstance.post('/blacklist/', {\n        \"refresh_token\": localStorage.getItem(\"refresh_token\")\n      });\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      axiosInstance.defaults.headers['Authorization'] = null;\n      return response;\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }), this.state.posts.map(post => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, \"POST\"), post.content)), this.state.comments.map(comment => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, \"COMMENT\"), comment.content, comment.post.author.first_name)), /*#__PURE__*/React.createElement(Grid, {\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      centered: true,\n      width: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BigProfileCard, {\n      className: \"profCard\",\n      name: this.state.user.first_name + \" \" + this.state.user.last_name,\n      src: this.state.profile.image,\n      inspired: this.state.profile.total_matches,\n      matched: this.state.profile.ind_matches,\n      groups: this.state.groups,\n      bio: this.state.profile.bio,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(GroupsCard, {\n      header: \"Groups\",\n      groups: this.state.groups,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 19\n      }\n    })))));\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["/Users/joonyounglee/MITHACK/MITHack2020/client/src/Pages/Profile.js"],"names":["React","Component","NavBar","axiosInstance","Icon","Button","Card","Grid","BsFillLightningFill","FaHandsHelping","Color","UserGroups","ProfileInfo","UserInfo","UserPosts","ParsePosts","UserComments","ParseComments","NewPost","BigProfileCard","GroupsCard","description","join","postReducer","state","action","type","showpost","dimmer","Error","Profile","constructor","handleLogout","bind","groups","user","profile","posts","comments","componentDidMount","user_id","localStorage","getItem","setPosts","setUser","setGroups","setProfile","setComments","obj","then","data","setState","response","post","removeItem","defaults","headers","e","console","log","render","map","content","comment","author","first_name","last_name","image","total_matches","ind_matches","bio"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport NavBar from \"../Components/NavBar\";\nimport axiosInstance from \"../User/axiosApi\";\nimport { Icon, Button, Card, Grid} from 'semantic-ui-react'\nimport { BsFillLightningFill} from \"react-icons/bs\";\nimport {FaHandsHelping} from \"react-icons/fa\"\nimport * as Color from \"../Components/Color\";\nimport UserGroups from \"../APIComponents/UserGroups\";\nimport ProfileInfo from \"../APIComponents/ProfileInfo\";\nimport UserInfo from \"../APIComponents/UserInfo\";\nimport UserPosts from \"../APIComponents/UserPosts\";\nimport ParsePosts from \"../APIComponents/ParsePosts\";\nimport UserComments from \"../APIComponents/UserComments\";\nimport ParseComments from \"../APIComponents/ParseComments\";\nimport NewPost from \"../Components/NewPost\";\nimport BigProfileCard from \"../Components/BigProfileCard\";\nimport GroupsCard from \"../Components/GroupsCard\";\n\n\nconst description = [\n  'I am a violinist with 2 years of experience in the wedding industry.',\n  'I enjoy the outdoors and currently reside in upstate New York.',\n].join(' ')\n\n// actions inspired, actions matched \n// image \n// groups -> group images\n// user posts / comments  \n\nfunction postReducer(state, action) {\n  switch (action.type) {\n    case 'OPEN_MODAL' :\n      return { showpost: true, dimmer: action.dimmer }\n    case 'CLOSE_MODAL' : \n      return { showpost: false }\n    default: \n      throw new Error(); \n  }\n}\n\n\nclass Profile extends Component {\n  constructor() {\n    super();\n    this.handleLogout = this.handleLogout.bind(this);\n    this.state = {\n      groups: [], // group. name, description, image \n      user: {}, // user.first_name, user.last_name\n      profile: {}, // profile. bio, image, ind_matches, total_matches \n      posts: [], // post. content, group, author, hearts, matches, isMatch, goal\n      comments: [], // comment. content, post \n    };\n  }\n\n  componentDidMount() {\n    const user_id = localStorage.getItem('user_id');\n\n    this.setPosts(user_id);\n    this.setUser(user_id); // can likely replace some of these with functional progr. // no time \n    this.setGroups(user_id);\n    this.setProfile(user_id); \n    this.setComments(user_id);\n  }\n\n  async setPosts(user_id) {\n    let posts = await UserPosts(user_id);\n    posts = ParsePosts(posts);\n\n    let obj = this.state \n\n    posts.then(data => {\n      obj.posts = data; \n      this.setState(obj); \n    })\n  };\n\n  async setUser(user_id) {\n    let user = UserInfo(user_id);\n\n    let obj = this.state; \n\n    user.then(data => {\n      obj.user = data; \n      this.setState(obj);\n    })\n  };\n\n  async setGroups(user_id) {\n    let groups = UserGroups(user_id);\n\n    let obj = this.state; \n\n    groups.then(data => {\n      obj.groups = data; \n      this.setState(obj);\n    })\n  }\n\n  async setProfile(user_id) {\n    let profile = ProfileInfo(user_id);\n\n    let obj = this.state; \n\n    profile.then(data => {\n      obj.profile = data; \n      this.setState(obj);\n    })\n  }\n\n  async setComments(user_id) {\n    let comments = await UserComments(user_id);\n    comments = ParseComments(comments);\n\n    let obj = this.state; \n\n    comments.then(data => {\n      obj.comments = data; \n      this.setState(obj);\n    })\n  }\n\n\n  async handleLogout() {\n      try {\n          const response = await axiosInstance.post('/blacklist/', {\n              \"refresh_token\": localStorage.getItem(\"refresh_token\")\n          });\n          localStorage.removeItem('access_token');\n          localStorage.removeItem('refresh_token');\n          axiosInstance.defaults.headers['Authorization'] = null;\n          return response;\n      }\n      catch (e) {\n          console.log(e);\n      }\n  };\n\n  render (){\n    return (\n      <div>\n        <NavBar />\n\n        {this.state.posts.map(post => (\n          <div>\n            <h1>POST</h1>\n            {post.content}\n          </div>\n        ))}\n        {this.state.comments.map(comment => (\n          <div>\n            <h1>COMMENT</h1>\n            {comment.content}\n            {comment.post.author.first_name}\n          </div>\n        ))}\n        <Grid centered>\n            <Grid.Row>\n                <Grid.Column centered width={9}>\n                </Grid.Column>\n\n                <Grid.Column width={4}>\n                  <BigProfileCard className=\"profCard\" name={this.state.user.first_name + \" \" + this.state.user.last_name} src={this.state.profile.image} \n                      inspired={this.state.profile.total_matches} matched={this.state.profile.ind_matches} \n                      groups={this.state.groups} bio={this.state.profile.bio} />\n                  <GroupsCard header=\"Groups\" groups={this.state.groups}/>\n                </Grid.Column>\n\n            </Grid.Row>\n\n        </Grid>\n       \n      </div>\n\n    );\n  }\n}\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}