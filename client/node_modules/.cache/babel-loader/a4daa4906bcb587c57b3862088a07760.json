{"ast":null,"code":"var _jsxFileName = \"/Users/joonyounglee/MITHACK/MITHack2020/client/src/Pages/IndPost.js\";\nimport React, { useState, useEffect, Text } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport NavBar from \"../Components/NavBar\";\nimport ParsePost from \"../APIComponents/ParsePost\";\nimport PostInfo from \"../APIComponents/PostInfo\";\nimport { Grid, Container, Header, Image, Label, Menu, Progress, Form, Button } from \"semantic-ui-react\";\nimport Comments from \"../Components/Comments\";\nimport SubmitMatch from \"../APIComponents/SubmitMatch\";\nimport RemoveMatch from \"../APIComponents/RemoveMatch\";\n\nconst IndPost = props => {\n  const [showComments, setShowComments] = useState(false);\n  const [post, setPost] = useState({});\n  const [matched, setMatch] = React.useState(false);\n  const post_id = props.postID;\n  const user_id = localStorage.getItem('user_id');\n\n  async function handleCreateMatch() {\n    let response = await SubmitMatch({\n      author: user_id,\n      match_post: post_id\n    });\n\n    if (response.status === 201) {\n      setMatch(true);\n    } else {\n      console.log(\"unsuccessful match\");\n      console.log(response.status);\n    }\n  }\n\n  async function handleRemoveMatch() {\n    let response = await RemoveMatch(post_id, user_id);\n\n    if (response.status === 204) {\n      setMatch(false);\n    } else {\n      console.log('unsuccessful unmatch');\n      console.log(response.status);\n    }\n  }\n\n  const handleMatch = () => {\n    if (matched) {\n      handleRemoveMatch();\n    } else {\n      handleCreateMatch();\n    }\n  };\n\n  const handleShowComments = () => {\n    setShowComments(true);\n  };\n\n  const handleHideComments = () => {\n    setShowComments(false);\n  };\n\n  useEffect(() => {\n    getPost();\n  }, {});\n\n  async function getPost() {\n    let data = await PostInfo(post_id);\n    console.log(data);\n    data = await ParsePost(data);\n    setPost(data);\n    setMatch(post.matched);\n  }\n\n  if (post.isMatch) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      centered: true,\n      columns: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      style: {\n        left: -50\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      text: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      as: \"a\",\n      color: \"blue\",\n      ribbon: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    }, post.group.theme), /*#__PURE__*/React.createElement(Header, {\n      as: \"h1\",\n      style: {\n        fontSize: '5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, post.group.name), /*#__PURE__*/React.createElement(Header, {\n      as: \"h1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, \"Match \", post.author.first_name, \"'s lead.\"))), /*#__PURE__*/React.createElement(Grid.Row, {\n      centered: true,\n      columns: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      attached: \"top\",\n      tabular: true,\n      fluid: true,\n      widths: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Menu.Item, {\n      name: \"action\",\n      active: !showComments,\n      onClick: handleHideComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Menu.Item, {\n      name: \"comments\",\n      active: showComments,\n      onClick: handleShowComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Grid.Row, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      text: true,\n      style: {\n        display: showComments ? \"none\" : \"\",\n        margin: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 45\n      }\n    }, \"Here's what I did.\"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 45\n      }\n    }, post.content), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 45\n      }\n    }, \"Why should you care?\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 45\n      }\n    }, post.reason)), /*#__PURE__*/React.createElement(Container, {\n      text: true,\n      style: {\n        display: showComments ? \"\" : \"none\",\n        margin: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Comments, {\n      comments: post.comments,\n      visible: showComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(Grid.Column, {\n      centered: true,\n      style: {\n        marginLeft: \"30px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }\n    }, \"Contribute to \", post.group.name, \"'s impact.\"), /*#__PURE__*/React.createElement(\"h5\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 29\n      }\n    }, \"Help get to \", post.goal, \" matches.\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Progress, {\n      percent: (post.matches / post.goal * 100).toFixed(3),\n      color: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 33\n      }\n    }, \"Enter your name to confirm.\"), /*#__PURE__*/React.createElement(Form.Input, {\n      placeholder: \"First Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      placeholder: \"Last Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Form.Button, {\n      onClick: handleMatch,\n      fluid: true,\n      basic: true,\n      color: \"blue\",\n      icon: post.matched ? \"handshake\" : 'handshake outline',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 33\n      }\n    }))))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, \"under construction\");\n  }\n};\n\nexport default IndPost;\n{\n  /* <Card.Content extra>\n  <List horizontal selection>\n  <Popup content='Like' basic trigger={\n     <List.Item\n         onClick={handleHeart}\n     >\n          <List.Icon \n         name={hearted ? \"heart\" : \"heart outline\"}\n         size=\"large\"\n         label={{as: 'a', corner: 'left', value: props.post.hearts}}\n         >\n          </List.Icon>\n      </List.Item>\n  } /> */\n}","map":{"version":3,"sources":["/Users/joonyounglee/MITHACK/MITHack2020/client/src/Pages/IndPost.js"],"names":["React","useState","useEffect","Text","useParams","NavBar","ParsePost","PostInfo","Grid","Container","Header","Image","Label","Menu","Progress","Form","Button","Comments","SubmitMatch","RemoveMatch","IndPost","props","showComments","setShowComments","post","setPost","matched","setMatch","post_id","postID","user_id","localStorage","getItem","handleCreateMatch","response","author","match_post","status","console","log","handleRemoveMatch","handleMatch","handleShowComments","handleHideComments","getPost","data","isMatch","left","group","theme","fontSize","name","first_name","display","margin","fontWeight","content","reason","comments","marginLeft","goal","matches","toFixed"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, Text} from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport NavBar from \"../Components/NavBar\";\nimport ParsePost from \"../APIComponents/ParsePost\";\nimport PostInfo from \"../APIComponents/PostInfo\";\nimport {Grid, Container, Header, Image, Label, Menu, Progress, Form, Button} from \"semantic-ui-react\";\nimport Comments from \"../Components/Comments\";\nimport SubmitMatch from \"../APIComponents/SubmitMatch\";\nimport RemoveMatch from \"../APIComponents/RemoveMatch\";\n\nconst IndPost = (props) => {\n\n    const [showComments, setShowComments] = useState(false);\n    const [post, setPost] = useState({});\n\n    const [matched, setMatch] = React.useState(false);\n        \n    const post_id = props.postID;\n\n    const user_id = localStorage.getItem('user_id');\n\n    async function handleCreateMatch() {\n        let response = await SubmitMatch({\n            author: user_id, \n            match_post: post_id, \n        })\n\n        if (response.status === 201) {\n            setMatch(true);\n        } else {\n            console.log(\"unsuccessful match\");\n            console.log(response.status);\n        }\n    }\n\n    async function handleRemoveMatch() {\n        let response = await RemoveMatch(post_id, user_id);\n\n        if (response.status === 204) {\n            setMatch(false); \n        } else {\n            console.log('unsuccessful unmatch');\n            console.log(response.status);\n        }\n    }\n\n    const handleMatch = () => {\n        if (matched) {\n            handleRemoveMatch();\n        } else {\n            handleCreateMatch();\n        }\n    }\n\n\n\n    const handleShowComments = () => {\n        setShowComments(true);\n    }\n\n    const handleHideComments = () => {\n        setShowComments(false);\n    }\n\n    useEffect(() => {\n        getPost();\n    }, {});\n\n    async function getPost() {\n        let data = await PostInfo(post_id);\n        console.log(data);\n        data = await ParsePost(data);\n        setPost(data);\n        setMatch(post.matched);\n    }\n    if (post.isMatch) {\n        return(\n            <div>\n                <NavBar />\n                <Grid centered columns={2}>\n                    <Grid.Column style={{left: -50}}>\n                        <Container text>\n                            <Label as='a' color='blue' ribbon>\n                                {post.group.theme}\n                            </Label>\n                            <Header as ='h1' style={{fontSize: '5em'}}>\n                                {post.group.name}\n                            </Header>\n                            <Header as='h1'>\n                                Match {post.author.first_name}'s lead.\n                            </Header>\n                        </Container>\n                    </Grid.Column>\n                    <Grid.Row centered columns={4}>\n                        <Grid.Column>\n                            <Grid.Row>\n                                <Menu attached='top' tabular fluid widths={2}>\n                                    <Menu.Item\n                                        name='action'\n                                        active={!showComments}\n                                        onClick={handleHideComments}\n                                    >\n                                    </Menu.Item>\n                                    <Menu.Item\n                                        name='comments'\n                                        active={showComments}\n                                        onClick={handleShowComments}\n                                    >\n                                    </Menu.Item>\n                                </Menu>\n                            </Grid.Row>\n                            <Grid.Row fluid>\n                                <Container text style={{display: showComments ? \"none\" : \"\", margin: \"20px\"}}>\n                                            <h2 style={{fontWeight: \"bold\"}}>\n                                                Here's what I did.\n                                            </h2>\n                                            <h5>\n                                                {post.content}\n                                            </h5>\n                                            <br></br>\n                                            <h3 style={{fontWeight: \"bold\"}}>\n                                                Why should you care?\n                                            </h3>\n                                            <p>\n                                                {post.reason}\n                                            </p>\n                                </Container>\n                                <Container text style={{display: showComments ? \"\" : \"none\", margin: \"20px\"}}>\n                                    <Comments comments={post.comments} visible={showComments} />\n                                </Container>\n                            </Grid.Row>\n                        </Grid.Column>\n\n                        <Grid.Column centered style={{marginLeft: \"30px\"}}>\n                            <h5>\n                                Contribute to {post.group.name}'s impact.\n                            </h5>\n                            <h5 style={{fontWeight: \"bold\"}}>\n                                Help get to {post.goal} matches.\n                            </h5>\n                            <br></br>\n                            <Progress percent={((post.matches / post.goal) * 100).toFixed(3)} color=\"blue\"/>\n                            {/* <h5 style={{fontWeight: 'bold'}}>\n                                Help get to {post.goal}.\n                            </h5> */}\n                            <br></br>\n                            <Form>\n                                <Header>\n                                    Enter your name to confirm.\n                                </Header>\n                                <Form.Input placeholder='First Name' />\n                                <Form.Input placeholder='Last Name' />\n                                <Form.Button\n                                    onClick={handleMatch}\n                                    fluid \n                                    basic \n                                    color='blue'\n                                    icon={post.matched ? \"handshake\" : 'handshake outline'}\n                                />\n                            </Form>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </div>\n        )\n    } else {\n        return(\n            <div>\n                under construction\n            </div>\n        )\n    }\n\n}\n\nexport default IndPost;\n\n{/* <Card.Content extra>\n<List horizontal selection>\n<Popup content='Like' basic trigger={\n    <List.Item\n        onClick={handleHeart}\n    >\n\n        <List.Icon \n        name={hearted ? \"heart\" : \"heart outline\"}\n        size=\"large\"\n        label={{as: 'a', corner: 'left', value: props.post.hearts}}\n        >\n\n        </List.Icon>\n\n    </List.Item>\n} /> */}"]},"metadata":{},"sourceType":"module"}