{"ast":null,"code":"import React from \"react\";\nimport GroupInfo from \"../APIComponents/GroupInfo\";\nimport UserInfo from \"../APIComponents/UserInfo\";\nimport ProfileInfo from \"../APIComponents/ProfileInfo\";\nimport AllPostComments from \"../APIComponents/AllPostComments\";\nimport ParseComments from \"../APIComponents/ParseComments\";\nimport CheckMatch from \"../APIComponents/CheckMatch\";\nimport CheckHeart from \"../APIComponents/CheckHeart\";\n\nasync function ParsePost(post, user_id) {\n  if (post.isMatch) {\n    post['matched'] = await CheckMatch(post.id, user_id);\n  }\n\n  post['hearted'] = await CheckHeart(post.id, user_id);\n  console.log(post.hearted);\n  post.group = await GroupInfo(post.group);\n  post['user_id'] = post.author;\n  post['profile'] = await ProfileInfo(post.user_id);\n  let comments = await AllPostComments(post.id);\n  post['comments'] = await ParseComments(comments);\n  post.author = await UserInfo(post.user_id);\n  return post;\n}\n\nexport default ParsePost;","map":{"version":3,"sources":["/Users/joonyounglee/MITHACK/MITHack2020/client/src/APIComponents/ParsePost.js"],"names":["React","GroupInfo","UserInfo","ProfileInfo","AllPostComments","ParseComments","CheckMatch","CheckHeart","ParsePost","post","user_id","isMatch","id","console","log","hearted","group","author","comments"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;;AAEA,eAAeC,SAAf,CAAyBC,IAAzB,EAA+BC,OAA/B,EAAwC;AAEpC,MAAID,IAAI,CAACE,OAAT,EAAkB;AACdF,IAAAA,IAAI,CAAC,SAAD,CAAJ,GAAkB,MAAMH,UAAU,CAACG,IAAI,CAACG,EAAN,EAAUF,OAAV,CAAlC;AACH;;AAEDD,EAAAA,IAAI,CAAC,SAAD,CAAJ,GAAkB,MAAMF,UAAU,CAACE,IAAI,CAACG,EAAN,EAAUF,OAAV,CAAlC;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACM,OAAjB;AAEAN,EAAAA,IAAI,CAACO,KAAL,GAAa,MAAMf,SAAS,CAACQ,IAAI,CAACO,KAAN,CAA5B;AACAP,EAAAA,IAAI,CAAC,SAAD,CAAJ,GAAkBA,IAAI,CAACQ,MAAvB;AACAR,EAAAA,IAAI,CAAC,SAAD,CAAJ,GAAkB,MAAMN,WAAW,CAACM,IAAI,CAACC,OAAN,CAAnC;AACA,MAAIQ,QAAQ,GAAG,MAAMd,eAAe,CAACK,IAAI,CAACG,EAAN,CAApC;AACAH,EAAAA,IAAI,CAAC,UAAD,CAAJ,GAAmB,MAAMJ,aAAa,CAACa,QAAD,CAAtC;AACAT,EAAAA,IAAI,CAACQ,MAAL,GAAc,MAAMf,QAAQ,CAACO,IAAI,CAACC,OAAN,CAA5B;AAEA,SAAOD,IAAP;AACH;;AAED,eAAeD,SAAf","sourcesContent":["import React from \"react\";\nimport GroupInfo from \"../APIComponents/GroupInfo\";\nimport UserInfo from \"../APIComponents/UserInfo\";\nimport ProfileInfo from \"../APIComponents/ProfileInfo\";\nimport AllPostComments from \"../APIComponents/AllPostComments\";\nimport ParseComments from \"../APIComponents/ParseComments\";\nimport CheckMatch from \"../APIComponents/CheckMatch\";\nimport CheckHeart from \"../APIComponents/CheckHeart\";\n\nasync function ParsePost(post, user_id) {\n\n    if (post.isMatch) {\n        post['matched'] = await CheckMatch(post.id, user_id);\n    }\n\n    post['hearted'] = await CheckHeart(post.id, user_id); \n    console.log(post.hearted);\n\n    post.group = await GroupInfo(post.group);    \n    post['user_id'] = post.author; \n    post['profile'] = await ProfileInfo(post.user_id);\n    let comments = await AllPostComments(post.id);\n    post['comments'] = await ParseComments(comments);\n    post.author = await UserInfo(post.user_id);\n\n    return post; \n}\n\nexport default ParsePost;"]},"metadata":{},"sourceType":"module"}