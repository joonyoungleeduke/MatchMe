{"ast":null,"code":"import React from \"react\";\nimport GroupInfo from \"../APIComponents/GroupInfo\";\nimport UserInfo from \"../APIComponents/UserInfo\";\nimport ProfileInfo from \"../APIComponents/ProfileInfo\";\nimport AllPostComments from \"../APIComponents/AllPostComments\";\nimport ParseComments from \"../APIComponents/ParseComments\";\nimport axiosInstance from \"../User/axiosApi\";\nimport GroupActions from \"../APIComponents/GroupActions\";\nimport GroupMatches from \"../APIComponents/GroupMatches\";\nimport GroupUserTotal from \"../APIComponents/GroupUserTotal\";\n\nasync function ParseGroup(data) {\n  try {\n    data['actions'] = await GroupActions(data.id);\n    data['matches'] = await GroupMatches(data.id);\n    data['total_users'] = await GroupUserTotal(data.id);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport default ParseGroup; // function GroupInfo(group_id) {\n//     async function groupDetailFetch(group_id) {\n//         try {\n//             const response = await axiosInstance.get('api/groups/' + group_id.toString() + \"/\");\n//             return response.data; \n//         } catch (error) {\n//             console.log(error);\n//         }\n//     };\n//     return groupDetailFetch(group_id);\n// }\n// export default GroupInfo;\n// path('groups/actions/<int:pk>/', group_action_total, name='group-action-total'),\n// path('groups/matches/<int:pk>/', group_match_total, name='group-match-total'),\n// class ActionGroup(models.Model):\n//     owner = models.ForeignKey(User, related_name='group_creator', on_delete=models.CASCADE)\n//     name = models.CharField(max_length=50)\n//     description = models.TextField()\n//     closed = models.BooleanField(default=False)\n//     members = models.ManyToManyField(User, related_name='group_users')\n//     mods = models.ManyToManyField(User, related_name='group_mods')\n//     admins = models.ManyToManyField(User, related_name='admin_mods')\n//     created = models.DateTimeField(auto_now_add=True)\n//     theme = models.CharField(max_length=100)\n//     image = models.ImageField(upload_to='group_pictures', default='default_group.jpg')\n//     def total_members(self):\n//         return self.members.count() \n//     def is_admin(self, user):\n//         return user in self.admins or user == creator \n//     def is_mod(self, user):\n//         return user in self.mods","map":{"version":3,"sources":["/Users/joonyounglee/MITHACK/MITHack2020/client/src/APIComponents/ParseGroup.js"],"names":["React","GroupInfo","UserInfo","ProfileInfo","AllPostComments","ParseComments","axiosInstance","GroupActions","GroupMatches","GroupUserTotal","ParseGroup","data","id","error","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AAEA,eAAeC,UAAf,CAA0BC,IAA1B,EAAgC;AAE5B,MAAI;AACAA,IAAAA,IAAI,CAAC,SAAD,CAAJ,GAAkB,MAAMJ,YAAY,CAACI,IAAI,CAACC,EAAN,CAApC;AACAD,IAAAA,IAAI,CAAC,SAAD,CAAJ,GAAkB,MAAMH,YAAY,CAACG,IAAI,CAACC,EAAN,CAApC;AACAD,IAAAA,IAAI,CAAC,aAAD,CAAJ,GAAsB,MAAMF,cAAc,CAACE,IAAI,CAACC,EAAN,CAA1C;AAEA,WAAOD,IAAP;AAEH,GAPD,CAOE,OAAOE,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;;AAED,eAAeH,UAAf,C,CAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA","sourcesContent":["import React from \"react\";\nimport GroupInfo from \"../APIComponents/GroupInfo\";\nimport UserInfo from \"../APIComponents/UserInfo\";\nimport ProfileInfo from \"../APIComponents/ProfileInfo\";\nimport AllPostComments from \"../APIComponents/AllPostComments\";\nimport ParseComments from \"../APIComponents/ParseComments\";\nimport axiosInstance from \"../User/axiosApi\";\nimport GroupActions from \"../APIComponents/GroupActions\";\nimport GroupMatches from \"../APIComponents/GroupMatches\";\nimport GroupUserTotal from \"../APIComponents/GroupUserTotal\";\n\nasync function ParseGroup(data) {\n\n    try {\n        data['actions'] = await GroupActions(data.id);\n        data['matches'] = await GroupMatches(data.id); \n        data['total_users'] = await GroupUserTotal(data.id);\n\n        return data; \n\n    } catch (error) {\n        console.log(error); \n    }\n}\n\nexport default ParseGroup;\n\n\n// function GroupInfo(group_id) {\n//     async function groupDetailFetch(group_id) {\n//         try {\n//             const response = await axiosInstance.get('api/groups/' + group_id.toString() + \"/\");\n\n//             return response.data; \n\n//         } catch (error) {\n//             console.log(error);\n//         }\n//     };\n\n//     return groupDetailFetch(group_id);\n\n// }\n\n\n// export default GroupInfo;\n\n\n// path('groups/actions/<int:pk>/', group_action_total, name='group-action-total'),\n// path('groups/matches/<int:pk>/', group_match_total, name='group-match-total'),\n\n\n// class ActionGroup(models.Model):\n//     owner = models.ForeignKey(User, related_name='group_creator', on_delete=models.CASCADE)\n//     name = models.CharField(max_length=50)\n//     description = models.TextField()\n//     closed = models.BooleanField(default=False)\n//     members = models.ManyToManyField(User, related_name='group_users')\n//     mods = models.ManyToManyField(User, related_name='group_mods')\n//     admins = models.ManyToManyField(User, related_name='admin_mods')\n//     created = models.DateTimeField(auto_now_add=True)\n\n//     theme = models.CharField(max_length=100)\n\n//     image = models.ImageField(upload_to='group_pictures', default='default_group.jpg')\n    \n//     def total_members(self):\n//         return self.members.count() \n\n//     def is_admin(self, user):\n//         return user in self.admins or user == creator \n    \n//     def is_mod(self, user):\n//         return user in self.mods\n\n\n"]},"metadata":{},"sourceType":"module"}